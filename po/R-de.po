# Translation of R-nlme.pot to German
# Copyright (C) 2007-2014 The R Foundation
# This file is distributed under the same license as the nlme package.
msgid ""
msgstr ""
"Project-Id-Version: R 4.0.0 / nlme-3.1-145\n"
"Report-Msgid-Bugs-To: bugs@r-project.org\n"
"POT-Creation-Date: 2024-09-13 20:06\n"
"PO-Revision-Date: 2020-04-01 15:18+0200\n"
"Last-Translator: Detlef Steuer <steuer@hsu-hh.de>\n"
"Language-Team: German <debian-l10n-german@lists.debian.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#. R/corStruct.R: gettextf("\"corARMA\" order (%g, %g) exceeds maximum lag in data (%g)",     p, q, maxLag)
#: R/corStruct.R:0
msgid "\"corARMA\" order (%g, %g) exceeds maximum lag in data (%g)"
msgstr ""

#. R/corStruct.R: stop("\"corStruct\" object must have a \"fixed\" attribute")
#: R/corStruct.R:0
msgid "\"corStruct\" object must have a \"fixed\" attribute"
msgstr "\"corStruct\"-Objekt muss ein \"fixed\"-Attribut haben."

#. R/reStruct.R: stop("\"pdMat\" element must have a formula")
#: R/reStruct.R:0
msgid "\"pdMat\" element must have a formula"
msgstr "\"pdMat\"-Element muss eine Formel haben."

#. R/reStruct.R: stop("\"pdMat\" elements must have a formula")
#: R/reStruct.R:0
msgid "\"pdMat\" elements must have a formula"
msgstr "\"pdMat\"-Elemente müssen eine Formel haben"

#. R/gls.R: gettextf("%s and %s must have the same group levels", c1, c2)
#: R/gls.R:0
msgid "%s and %s must have the same group levels"
msgstr "%s und %s müssen die gleichen Gruppenstufen haben"

#. R/varFunc.R: gettextf("%s can have at most two components", nam)
#. R/varFunc.R: gettextf("%s can have at most two components", nam)
#: R/varFunc.R:0
msgid "%s can have at most two components"
msgstr "%s kann höchstens zwei Komponenten haben."

#. R/varFunc.R: gettextf("%s can only be a list or numeric", nam)
#. R/varFunc.R: gettextf("%s can only be a list or numeric", nam)
#: R/varFunc.R:0
msgid "%s can only be a list or numeric"
msgstr "%s kann nur eine Liste oder numerisch sein."

#. R/varFunc.R: gettextf("%s can only have names \"const\" and \"power\"", nam)
#: R/varFunc.R:0
msgid "%s can only have names \"const\" and \"power\""
msgstr "%s kann nur die Namen \"const\" und \"power\" haben."

#. R/varFunc.R: gettextf("%s can only have names \"const\" and \"prop\"", nam)
#: R/varFunc.R:0
msgid "%s can only have names \"const\" and \"prop\""
msgstr "%s kann nur die Namen \"const\" und \"power\" haben."

#. R/lme.R: gettextf("%s is not a valid effect name", sQuote(reName))
#: R/lme.R:0
msgid "%s is not a valid effect name"
msgstr "%s ist kein gültiger Effektname"

#. R/pdMat.R: gettextf("%s is not a valid object for \"pdMat\"", sQuote(deparse(object)))
#: R/pdMat.R:0
msgid "%s is not a valid object for \"pdMat\""
msgstr "%s ist kein gültiges Objekt für \"pdMat\"."

#. R/varFunc.R: gettextf("%s must have group names in 'varConstPower'", nam)
#: R/varFunc.R:0
msgid "%s must have group names in 'varConstPower'"
msgstr "%s muss Gruppennamen in 'varConstPower' haben."

#. R/varFunc.R: gettextf("%s must have group names in 'varConstProp'", nam)
#: R/varFunc.R:0
msgid "%s must have group names in 'varConstProp'"
msgstr "%s muss Gruppennamen in 'varConstPower' haben."

#. R/lme.R: gettextf("%s problem, convergence error code = %s\n  message = %s",     controlvals$opt, optRes$convergence, paste(optRes$message,         collapse = ""), domain = "R-nlme")
#: R/lme.R:0
msgid ""
"%s problem, convergence error code = %s\n"
"  message = %s"
msgstr ""
"%s Problem, Konvergenzfehlerkode = %s\n"
"  Nachricht = %s"

#. R/gls.R: gettextf("%s without \"primary\" can only be used with fits of \"groupedData\" objects",     sys.call()[[1L]])
#. R/lmList.R: gettextf("%s without \"primary\" can only be used with fits of \"groupedData\" objects",     sys.call()[[1]])
#. R/lme.R: gettextf("%s without \"primary\" can only be used with fits of \"groupedData\" objects",     sys.call()[[1L]])
#: R/gls.R:0 R/lmList.R:0 R/lme.R:0
msgid "%s without \"primary\" can only be used with fits of \"groupedData\" objects"
msgstr "%s ohne \"primary\" kann nur für Anpassungen von \"groupedData\"-Objekten genutzt werden."

#. R/newFunc.R: stop("'FUN' can only be a function or a list of functions")
#: R/newFunc.R:0
msgid "'FUN' can only be a function or a list of functions"
msgstr "'FUN' kann nur eine Funktion oder eine Liste von Funktionen sein."

#. R/lme.R: stop("'Id' must be between 0 and 1")
#: R/lme.R:0
msgid "'Id' must be between 0 and 1"
msgstr "'Id' muss zwischen 0 und 1 liegen"

#. R/gls.R: gettextf("'Terms' must be between 1 and %d", nTerms)
#. R/lme.R: gettextf("'Terms' must be between 1 and %d", nTerms)
#: R/gls.R:0 R/lme.R:0
msgid "'Terms' must be between 1 and %d"
msgstr "'Terms' müssen zwischen 1 und %d liegen."

#. R/groupedData.R: stop("'asTable' can only be used with balanced 'groupedData' objects")
#: R/groupedData.R:0
msgid "'asTable' can only be used with balanced 'groupedData' objects"
msgstr "'asTable' kann nur mit balancierten 'groupedData'-Objekten benutzt werden"

#. R/groupedData.R: stop("'asTable' cannot be used with multilevel grouped data")
#: R/groupedData.R:0
msgid "'asTable' cannot be used with multilevel grouped data"
msgstr "'asTable' kann nicht mit mehrstufig gruppierten Daten benutzt werden"

#. R/lmList.R: message("'data' argument not used, but taken from groupedData object")
#: R/lmList.R:0
msgid "'data' argument not used, but taken from groupedData object"
msgstr "'data' Argument nicht benutzt, aber vom groupedData Objekt genommen"

#. R/lmList.R: gettextf("'data' in %s call must evaluate to a data frame", sQuote(substitute(object)))
#: R/lmList.R:0
msgid "'data' in %s call must evaluate to a data frame"
msgstr "'data' in %s muss sich zu einem Dataframe berechnen"

#. R/nlsList.R: stop("'data' must be a \"groupedData\" object if 'formula' does not include groups")
#: R/nlsList.R:0
msgid "'data' must be a \"groupedData\" object if 'formula' does not include groups"
msgstr "'data' muss ein \"groupedData\"-Objekt sein, wenn 'formula' keine Gruppen enthält."

#. R/lmList.R: stop("'data' must be a \"groupedData\" object if 'groups' argument is missing")
#: R/lmList.R:0
msgid "'data' must be a \"groupedData\" object if 'groups' argument is missing"
msgstr "'data' muss ein \"groupedData\"-Objekt sein, falls 'groups'-Argument fehlt"

#. R/gnls.R: stop("'data' must be given explicitly to use 'nls' to get initial estimates")
#: R/gnls.R:0
msgid "'data' must be given explicitly to use 'nls' to get initial estimates"
msgstr "'data' muss explizit angegeben werden, um 'nls' zum Gewinnen von  Initialschätzungen zu nutzen."

#. R/nlme.R: stop("'data' must be given explicitly to use 'nlsList'")
#: R/nlme.R:0
msgid "'data' must be given explicitly to use 'nlsList'"
msgstr "'data' muss explizit angegeben werden, um 'nlsList' zu benutzen."

#. R/simulate.R: stop("'data' must inherit from \"groupedData\" class if 'random' does not define groups")
#: R/simulate.R:0
msgid "'data' must inherit from \"groupedData\" class if 'random' does not define groups"
msgstr "'data' muss von der Klasse \"groupedData\" erben, falls 'random' keine Gruppen definiert."

#. R/newMethods.R: stop("'distance' and 'object' have incompatible lengths")
#: R/newMethods.R:0
msgid "'distance' and 'object' have incompatible lengths"
msgstr "'distance' und 'object' haben inkompatible Längen"

# R/nlme.R
#. R/nlme.R: stop("'fixed' must be a formula or list of formulae")
#: R/nlme.R:0
msgid "'fixed' must be a formula or list of formulae"
msgstr "'fixed' muss eine Formel oder eine Liste von Formeln sein."

#. R/pdMat.R: stop("'form' and 'nam' have incompatible lengths")
#: R/pdMat.R:0
msgid "'form' and 'nam' have incompatible lengths"
msgstr "'form' und 'nam' haben inkompatible Längen"

#. R/pdMat.R: stop("'form' and 'pdClass' have incompatible lengths")
#: R/pdMat.R:0
msgid "'form' and 'pdClass' have incompatible lengths"
msgstr "'form' und 'pdClass' haben inkompatible Längen"

#. R/newMethods.R: stop("'form' argument must be a formula")
#: R/newMethods.R:0
msgid "'form' argument must be a formula"
msgstr "'form'-Argument muss eine Formel sein"

#. R/pdMat.R: stop("'form' can only be a formula or a list of formulae")
#: R/pdMat.R:0
msgid "'form' can only be a formula or a list of formulae"
msgstr "'form' kann nur eine Formel oder eine Liste von Formeln sein."

#. R/newMethods.R: stop("'form' can only be a formula, or a list of formulas")
#: R/newMethods.R:0
msgid "'form' can only be a formula, or a list of formulas"
msgstr "'form' kann nur eine Formel oder eine Liste von Formeln sein."

#. R/lmList.R: stop("'form' must be a formula")
#. R/lmList.R: stop("'form' must be a formula")
#. R/lmList.R: stop("'form' must be a formula")
#. R/lme.R: stop("'form' must be a formula")
#. R/lme.R: stop("'form' must be a formula")
#. R/newFunc.R: stop("'form' must be a formula")
#. R/newFunc.R: stop("'form' must be a formula")
#. R/newMethods.R: stop("'form' must be a formula")
#. R/newMethods.R: stop("'form' must be a formula")
#. R/newMethods.R: stop("'form' must be a formula")
#: R/lmList.R:0 R/lme.R:0 R/newFunc.R:0 R/newMethods.R:0
msgid "'form' must be a formula"
msgstr "'form' muss eine Formel sein"

#. R/lme.R: stop("'form' must be a formula when not NULL")
#: R/lme.R:0
msgid "'form' must be a formula when not NULL"
msgstr "'form' muss eine Formel sein, wenn nicht NULL"

#. R/pdMat.R: stop("'form' must be a list")
#: R/pdMat.R:0
msgid "'form' must be a list"
msgstr "'form' muss eine Liste sein"

#. R/lmList.R: stop("'form' must be a one-sided formula")
#. R/lme.R: stop("'form' must be a one-sided formula")
#: R/lmList.R:0 R/lme.R:0
msgid "'form' must be a one-sided formula"
msgstr "'form' muss eine einseitige Formel sein"

#. R/newFunc.R: stop("'form' must be a two-sided formula")
#. R/newMethods.R: stop("'form' must be a two-sided formula")
#: R/newFunc.R:0 R/newMethods.R:0
msgid "'form' must be a two-sided formula"
msgstr "'form' muss eine zweiseitige Formel sein."

#. R/varFunc.R: stop("'form' must have a covariate")
#. R/varFunc.R: stop("'form' must have a covariate")
#. R/varFunc.R: stop("'form' must have a covariate")
#. R/varFunc.R: stop("'form' must have a covariate")
#. R/varFunc.R: stop("'form' must have a covariate")
#: R/varFunc.R:0
msgid "'form' must have a covariate"
msgstr "'form' muss eine Kovariate haben."

#. R/newMethods.R: stop("'form' must have all components as formulas")
#: R/newMethods.R:0
msgid "'form' must have all components as formulas"
msgstr "'form' muss alle Komponenten als Formeln enthalten."

#. R/pdMat.R: stop("'form' not consistent with 'nam'")
#: R/pdMat.R:0
msgid "'form' not consistent with 'nam'"
msgstr "'form' nicht konsistent mit 'nam'"

#. R/lmList.R: stop("'id' can only be a formula or numeric")
#. R/lmList.R: stop("'id' can only be a formula or numeric")
#. R/lmList.R: stop("'id' can only be a formula or numeric")
#. R/lmList.R: stop("'id' can only be a formula or numeric")
#. R/lme.R: stop("'id' can only be a formula or numeric")
#. R/lme.R: stop("'id' can only be a formula or numeric")
#. R/lme.R: stop("'id' can only be a formula or numeric")
#. R/newMethods.R: stop("'id' can only be a formula or numeric")
#. R/newMethods.R: stop("'id' can only be a formula or numeric")
#: R/lmList.R:0 R/lme.R:0 R/newMethods.R:0
msgid "'id' can only be a formula or numeric"
msgstr "'id' kann nur eine Formel oder numerisch sein."

#. R/lmList.R: stop("'id' must be between 0 and 1")
#. R/lmList.R: stop("'id' must be between 0 and 1")
#. R/lmList.R: stop("'id' must be between 0 and 1")
#. R/lmList.R: stop("'id' must be between 0 and 1")
#. R/lme.R: stop("'id' must be between 0 and 1")
#. R/lme.R: stop("'id' must be between 0 and 1")
#. R/newMethods.R: stop("'id' must be between 0 and 1")
#. R/newMethods.R: stop("'id' must be between 0 and 1")
#: R/lmList.R:0 R/lme.R:0 R/newMethods.R:0
msgid "'id' must be between 0 and 1"
msgstr "'id' muss zwischen 0 und 1 liegen"

#. R/lmList.R: stop("'idLabels' can only be a formula or a vector")
#. R/lmList.R: stop("'idLabels' can only be a formula or a vector")
#. R/lmList.R: stop("'idLabels' can only be a formula or a vector")
#. R/lmList.R: stop("'idLabels' can only be a formula or a vector")
#. R/lme.R: stop("'idLabels' can only be a formula or a vector")
#. R/lme.R: stop("'idLabels' can only be a formula or a vector")
#. R/lme.R: stop("'idLabels' can only be a formula or a vector")
#. R/newMethods.R: stop("'idLabels' can only be a formula or a vector")
#. R/newMethods.R: stop("'idLabels' can only be a formula or a vector")
#: R/lmList.R:0 R/lme.R:0 R/newMethods.R:0
msgid "'idLabels' can only be a formula or a vector"
msgstr "'idLabels' kann nur eine Formel oder eine Vektor sein."

#. R/lmList.R: stop("'idLabels' of incorrect length")
#. R/lmList.R: stop("'idLabels' of incorrect length")
#. R/lmList.R: stop("'idLabels' of incorrect length")
#. R/lmList.R: stop("'idLabels' of incorrect length")
#. R/lme.R: stop("'idLabels' of incorrect length")
#. R/lme.R: stop("'idLabels' of incorrect length")
#. R/lme.R: stop("'idLabels' of incorrect length")
#. R/newMethods.R: stop("'idLabels' of incorrect length")
#. R/newMethods.R: stop("'idLabels' of incorrect length")
#: R/lmList.R:0 R/lme.R:0 R/newMethods.R:0
msgid "'idLabels' of incorrect length"
msgstr "'idLabels' hat falsche Länge"

#. R/lme.R: warning("'lme.lmList' will redefine 'data'")
#: R/lme.R:0
msgid "'lme.lmList' will redefine 'data'"
msgstr "'lme.lmList' wird 'data' redefinieren"

#. R/nlme.R: stop("'model' must be a formula")
#: R/nlme.R:0
msgid "'model' must be a formula"
msgstr "'model' muss eine Formel sein."

#. R/pdMat.R: stop("'nam' and 'pdClass' have incompatible lengths")
#: R/pdMat.R:0
msgid "'nam' and 'pdClass' have incompatible lengths"
msgstr "'nam' und 'pdClass' haben inkompatible Längen"

#. R/pdMat.R: stop("'nam' must be a list")
#: R/pdMat.R:0
msgid "'nam' must be a list"
msgstr "'nam' muss eine Liste sein"

#. R/gls.R: stop("'nint' is not consistent with 'breaks'")
#. R/lme.R: stop("'nint' is not consistent with 'breaks'")
#: R/gls.R:0 R/lme.R:0
msgid "'nint' is not consistent with 'breaks'"
msgstr "'nint' ist nicht konsistent mit 'breaks'"

#. R/nlme.R: warning("'nlme.nlsList' will redefine 'fixed', 'data', and 'start'")
#: R/nlme.R:0
msgid "'nlme.nlsList' will redefine 'fixed', 'data', and 'start'"
msgstr "'nlme.nlsList' wird 'fixed', 'data' und 'start' neu definieren"

#. R/corStruct.R: stop("'object' has not been Initialize()d")
#. R/corStruct.R: stop("'object' has not been Initialize()d")
#. R/corStruct.R: stop("'object' has not been Initialize()d")
#. R/corStruct.R: stop("'object' has not been Initialize()d")
#: R/corStruct.R:0
msgid "'object' has not been Initialize()d"
msgstr "Initialize() wurde nicht für »object« ausgeführt"

#. R/gnls.R: stop("'object' must be a formula")
#: R/gnls.R:0
msgid "'object' must be a formula"
msgstr "'object' muss eine Formel sein"

#. R/reStruct.R: stop("'object' must be a list or a formula")
#: R/reStruct.R:0
msgid "'object' must be a list or a formula"
msgstr "'object' muss eine Liste oder Formel sein"

# R/pdMat.R
#. R/pdMat.R: stop("'object' must be a list when not missing, not a matrix, and not numeric")
#: R/pdMat.R:0
msgid "'object' must be a list when not missing, not a matrix, and not numeric"
msgstr "'object' muss eine Liste sein, wenn es nicht fehlt, keine Matrix und nicht numerisch."

#. R/gnls.R: stop("'params' must be a formula or list of formulae")
#: R/gnls.R:0
msgid "'params' must be a formula or list of formulae"
msgstr "'params' müssen eine Formel oder eine Liste von Formeln sein."

# http://einstein.informatik.uni-oldenburg.de/rechnernetze/neue_verfahren.htm
#. R/pdMat.R: stop("'pdClass' must be a character vector")
#: R/pdMat.R:0
msgid "'pdClass' must be a character vector"
msgstr "'pdClass' muss ein Zeichenvektor sein"

#. R/groupedData.R: stop("'preserve' must be a two-sided formula")
#: R/groupedData.R:0
msgid "'preserve' must be a two-sided formula"
msgstr "'preserve' muss eine zweiseitige Formel sein"

#. R/nlme.R: stop("'random' must be a formula or list of formulae")
#: R/nlme.R:0
msgid "'random' must be a formula or list of formulae"
msgstr "'random' muss  eine Formel oder eine Liste von Formeln sein."

#. R/corStruct.R: stop("'range' must be > 0 in \"corLin\" initial value")
#: R/corStruct.R:0
msgid "'range' must be > 0 in \"corLin\" initial value"
msgstr "'range' im \"corLin\"-Anfangswert muss > 0 sein"

#. R/corStruct.R: stop("'range' must be > 0 in \"corSpatial\" initial value")
#: R/corStruct.R:0
msgid "'range' must be > 0 in \"corSpatial\" initial value"
msgstr "'range' muss im \"corSpatial\"-Anfangswert > 0 sein."

#. R/nlme.R: stop("'start' must have a component called 'fixed'")
#: R/nlme.R:0
msgid "'start' must have a component called 'fixed'"
msgstr "'start' muss eine Komponente mit Namen 'fixed' haben."

#. R/lmList.R: stop("'subset' can only be character or integer")
#. R/lmList.R: stop("'subset' can only be character or integer")
#: R/lmList.R:0
msgid "'subset' can only be character or integer"
msgstr "'subset' kann nur ein Zeichen oder eine ganze Zahl sein"

#. R/groupedData.R: warning("'subset' ignored with single grouping factor")
#: R/groupedData.R:0
msgid "'subset' ignored with single grouping factor"
msgstr "'subset' mit einzelnem Gruppierungsfaktor ignoriert"

#. R/groupedData.R: stop("'subset' must be a list")
#: R/groupedData.R:0
msgid "'subset' must be a list"
msgstr "'subset' muss eine Liste sein"

#. R/corStruct.R: gettextf("'sumLenSq := sum(table(groups)^2)' = %g is too large.\n Too large or no groups in your correlation structure?",     suml2)
#: R/corStruct.R:0
msgid ""
"'sumLenSq := sum(table(groups)^2)' = %g is too large.\n"
" Too large or no groups in your correlation structure?"
msgstr ""
"'sumLenSq := sum(table(groups)^2)' = %g ist zu groß.\n"
" Zu große oder keine Gruppen in der Korrelationsstrujtur? "

#. R/corStruct.R: gettextf("'sumLenSq' = %g is too large (larger than maximal integer)",     corD[["sumLenSq"]])
#: R/corStruct.R:0
msgid "'sumLenSq' = %g is too large (larger than maximal integer)"
msgstr "'sumLenSq' = %g ist zu groß (größer als maximale Integerzahl)"

#. R/varFunc.R: stop("'value' must be a one sided formula")
#: R/varFunc.R:0
msgid "'value' must be a one sided formula"
msgstr "'value' muss eine einseitige Formel sein."

#. R/pdMat.R: stop("'value' must be a square matrix")
#: R/pdMat.R:0
msgid "'value' must be a square matrix"
msgstr "'value' muss eine quadratische Matrix sein"

#. R/newFunc.R: stop("'which' can only be character or integer")
#: R/newFunc.R:0
msgid "'which' can only be character or integer"
msgstr "'which' kann nur ein Buchstabe oder eine Ganzzahl sein."

#. R/newFunc.R: gettextf("'which' must be between 1 and %d", ncol(object))
#: R/newFunc.R:0
msgid "'which' must be between 1 and %d"
msgstr "'which' muss zwischen 1 und %d liegen."

#. R/zzMethods.R: stop("AIC undefined for REML fit")
#: R/zzMethods.R:0
msgid "AIC undefined for REML fit"
msgstr "AIC für REML Anpassung nicht definiert"

#. R/nlme.R: if (convIter >= control$iter.max) "Do increase 'msMaxIter'!" else if (!is.null(msg <- optRes$message)) paste("PORT message:",     msg)
#. R/nlme.R: if (aNlm$code == 4) "Do increase 'msMaxIter'!"
#: R/nlme.R:0
msgid "Do increase 'msMaxIter'!"
msgstr "Bitte 'msMaxIter' erhöhen!"

#. R/nlme.R: sprintf("Iteration %d, LME step: nlm() did not converge (code = %d).",     numIter, aNlm$code)
#: R/nlme.R:0
msgid "Iteration %d, LME step: nlm() did not converge (code = %d)."
msgstr "Iteration %d, LME Schritt: nlm() hat nicht konvergiert (Kode = %d)."

#. R/nlme.R: sprintf("Iteration %d, LME step: nlminb() did not converge (code = %d).",     numIter, optRes$convergence)
#: R/nlme.R:0
msgid "Iteration %d, LME step: nlminb() did not converge (code = %d)."
msgstr "Iteration %d, LME Schritt: nlminb() hat nicht konvergiert (Kode = %d)."

#. R/lme.R: stop("L may only involve fixed effects with the same denominator DF")
#: R/lme.R:0
msgid "L may only involve fixed effects with the same denominator DF"
msgstr "L kann nur feste Effekte mit dem gleichen Nenner DF einschließen"

# FIXME s/LNone/None/ specifies?
#. R/pdMat.R: stop("LNone of the arguments specify more than one block")
#: R/pdMat.R:0
msgid "LNone of the arguments specify more than one block"
msgstr "Keines der Argumente gibt mehr als einen Block an"

#. R/pdMat.R: gettextf("Length of names should be %d", aux)
#. R/pdMat.R: gettextf("Length of names should be %d", length(dn))
#: R/pdMat.R:0
msgid "Length of names should be %d"
msgstr "Länge von names sollte %d sein"

#. R/nlme.R: paste("PORT message:", msg)
#: R/nlme.R:0
msgid "PORT message:"
msgstr "PORT Nachricht:"

#. R/gls.R: stop("Within-group std. dev. must be a positive numeric value")
#. R/gnls.R: stop("Within-group std. dev. must be a positive numeric value")
#. R/lme.R: stop("Within-group std. dev. must be a positive numeric value")
#. R/nlme.R: stop("Within-group std. dev. must be a positive numeric value")
#: R/gls.R:0 R/gnls.R:0 R/lme.R:0 R/nlme.R:0
msgid "Within-group std. dev. must be a positive numeric value"
msgstr "SD innerhalb der Gruppe muss positiver numerischer Wert sein"

#. R/varFunc.R: stop("all arguments to 'varComb' must be of class \"varFunc\".")
#: R/varFunc.R:0
msgid "all arguments to 'varComb' must be of class \"varFunc\"."
msgstr "Alle Argumente für 'varComb' müssen von der Klasse \"varFunc\" sein."

#. R/pdMat.R: stop("all elements in the argument must generate \"pdMat\" objects")
#: R/pdMat.R:0
msgid "all elements in the argument must generate \"pdMat\" objects"
msgstr "Alle Elemente des Arguments müssen \"pdMat\"-Objekte generieren."

#. R/pdMat.R: stop("all elements must have a non-zero size")
#: R/pdMat.R:0
msgid "all elements must have a non-zero size"
msgstr "Alle Elemente müssen eine Größe ungleich Null haben."

#. R/pdMat.R: stop("all elements must have formulas when any has a formula")
#: R/pdMat.R:0
msgid "all elements must have formulas when any has a formula"
msgstr "Alle Elemente müssen Formeln habe, wenn irgendeins eine Formel hat."

#. R/pdMat.R: stop("all elements must have names when any has names")
#: R/pdMat.R:0
msgid "all elements must have names when any has names"
msgstr "Alle Elemente müssen Namen habe, wenn irgendeins einen Namen hat."

#. R/pdMat.R: stop("all elements of 'form' list must be two-sided formulas")
#: R/pdMat.R:0
msgid "all elements of 'form' list must be two-sided formulas"
msgstr "Alle Elemente der 'form'-Liste müssen zweiseitige Formeln sein."

#. R/reStruct.R: stop("all elements of a \"reStruct\" object must have a non-zero size")
#: R/reStruct.R:0
msgid "all elements of a \"reStruct\" object must have a non-zero size"
msgstr "Alle Elemente eines \"reStruct\"-Objekts müssen eine Größe ungleich Null haben."

#. R/pdMat.R: stop("all elements of formula must be list of two-sided formulae or two-sided formulae")
#: R/pdMat.R:0
msgid "all elements of formula must be list of two-sided formulae or two-sided formulae"
msgstr "Alle Elemente der Formel müssen eine Liste zweiseitiger Formeln oder zweiseitige Formeln sein."

#. R/lme.R: stop("all fitted objects must have the same estimation method")
#: R/lme.R:0
msgid "all fitted objects must have the same estimation method"
msgstr "Alle gefitteten Objekte müssen die gleiche Schätzungsmethode haben."

#. R/lme.R: stop("all fitted objects must use the same number of observations")
#: R/lme.R:0
msgid "all fitted objects must use the same number of observations"
msgstr "Alle gefitteten Objekte müssen die gleiche Zahl von Beobachtungen benutzen."

#. R/varFunc.R: stop("all variables used in 'formula' must be in 'data'")
#: R/varFunc.R:0
msgid "all variables used in 'formula' must be in 'data'"
msgstr "Alle in 'formula' benutzten Variablen müssen in 'data' enthalten sein."

#. R/pdMat.R: gettextf("an object of length %d does not match a Cholesky factor",     length(val))
#: R/pdMat.R:0
msgid "an object of length %d does not match a Cholesky factor"
msgstr "Ein Objekt der Länge %d entspricht keinem Cholesky-Faktor"

#. R/pdMat.R: gettextf("an object of length %d does not match the required parameter size",     length(val))
#. R/pdMat.R: gettextf("an object of length %d does not match the required parameter size",     length(val))
#. R/pdMat.R: gettextf("an object of length %d does not match the required parameter size",     length(val))
#. R/pdMat.R: gettextf("an object of length %d does not match the required parameter size",     length(val))
#. R/pdMat.R: gettextf("an object of length %d does not match the required parameter size",     length(val))
#: R/pdMat.R:0
msgid "an object of length %d does not match the required parameter size"
msgstr "Ein Objekt der Länge %d entspricht nicht der benötigten Parametergröße."

#. R/pdMat.R: stop("arguments imply different number of blocks")
#: R/pdMat.R:0
msgid "arguments imply different number of blocks"
msgstr "Argumente implizieren eine unterschiedliche Zahl von Blöcken"

#. R/corStruct.R: stop("at least one of 'p' and 'q' must be > 0")
#: R/corStruct.R:0
msgid "at least one of 'p' and 'q' must be > 0"
msgstr "'p' oder 'q' muss > 0 sein"

#. R/newMethods.R: stop("at least two coefficients are needed")
#: R/newMethods.R:0
msgid "at least two coefficients are needed"
msgstr "mindestens zwei Koeffizienten werden benötigt"

# CHECKME: augmentation? 
#. R/lme.R: stop("augmentation of random effects only available for single level")
#: R/lme.R:0
msgid "augmentation of random effects only available for single level"
msgstr "Augmentation von zufälligen Effekten ist nur für einzelne Stufe verfügbar"

#. R/corStruct.R: stop("autoregressive order must be a non-negative integer")
#: R/corStruct.R:0
msgid "autoregressive order must be a non-negative integer"
msgstr "Autoregressive Ordnung muss eine nicht-negative Ganzzahl sein."

#. R/varFunc.R: stop("can only construct \"varFunc\" object from another \"varFunc\" object, a formula, or a character string")
#: R/varFunc.R:0
msgid "can only construct \"varFunc\" object from another \"varFunc\" object, a formula, or a character string"
msgstr "\"varFunc\"-Objekt kann nur aus anderem \"varFunc\", einer Formel oder einer Zeichenkette erstellt werden."

#. R/lme.R: stop("can only fit \"lmList\" objects with single grouping variable")
#. R/lme.R: stop("can only fit \"lmList\" objects with single grouping variable")
#: R/lme.R:0
msgid "can only fit \"lmList\" objects with single grouping variable"
msgstr "Nur \"lmList\"-Objekte mit einzelner Gruppenvariable können angepasst werden."

#. R/nlme.R: stop("can only fit \"nlsList\" objects with single grouping variable")
#: R/nlme.R:0
msgid "can only fit \"nlsList\" objects with single grouping variable"
msgstr "nur \"lmList\"-Objekte mit einzelner Gruppenvariable können angepasst werden."

#. R/pdMat.R: stop("cannot access the matrix of object without names")
#. R/pdMat.R: stop("cannot access the matrix of object without names")
#: R/pdMat.R:0
msgid "cannot access the matrix of object without names"
msgstr "Auf die Matrix des Objekts kann ohne Namen nicht zugegriffen werden."

#. R/pdMat.R: stop("cannot access the matrix of uninitialized objects")
#. R/pdMat.R: stop("cannot access the matrix of uninitialized objects")
#. R/pdMat.R: stop("cannot access the matrix of uninitialized objects")
#. R/pdMat.R: stop("cannot access the matrix of uninitialized objects")
#. R/reStruct.R: stop("cannot access the matrix of uninitialized objects")
#. R/reStruct.R: stop("cannot access the matrix of uninitialized objects")
#: R/pdMat.R:0 R/reStruct.R:0
msgid "cannot access the matrix of uninitialized objects"
msgstr "Auf die Matrix der nicht initialisierten Objekten kann nicht zugegriffen werden."

#. R/pdMat.R: stop("cannot access the number of columns of uninitialized objects without names")
#: R/pdMat.R:0
msgid "cannot access the number of columns of uninitialized objects without names"
msgstr "Auf die Spaltenanzahl nicht initialisierter Objekte kann ohne Namen nicht zugegriffen werden."

#. R/gnls.R: stop("cannot calculate REML log-likelihood for \"gnls\" objects")
#: R/gnls.R:0
msgid "cannot calculate REML log-likelihood for \"gnls\" objects"
msgstr "REML Log-likelihood für \"gnls\"-Objekte kann nicht berechnet werden"

#. R/corStruct.R: warning("cannot change 'form'")
#: R/corStruct.R:0
msgid "cannot change 'form'"
msgstr "'form' kann nicht geändert werden."

#. R/varFunc.R: stop("cannot change coefficients before initialization or when all parameters are fixed")
#. R/varFunc.R: stop("cannot change coefficients before initialization or when all parameters are fixed")
#. R/varFunc.R: stop("cannot change coefficients before initialization or when all parameters are fixed")
#. R/varFunc.R: stop("cannot change coefficients before initialization or when all parameters are fixed")
#: R/varFunc.R:0
msgid "cannot change coefficients before initialization or when all parameters are fixed"
msgstr "Koeffizienten können nicht vor der Initialisierung oder wenn alle Parameter fest sind geändert werden."

#. R/pdMat.R: stop("cannot change dimensions on an initialized \"pdMat\" object")
#: R/pdMat.R:0
msgid "cannot change dimensions on an initialized \"pdMat\" object"
msgstr "Die Dimensionen eines initialisierten \"pdMat\"-Objekts können nicht geändert werden."

#. R/pdMat.R: stop("cannot change parameter length of initialized \"pdMat\" object")
#: R/pdMat.R:0
msgid "cannot change parameter length of initialized \"pdMat\" object"
msgstr "Länge des initialisierten \"pdMat\"-Objekts kann nicht geändert werden."

#. R/varFunc.R: stop("cannot change parameter length of initialized \"varComb\" object")
#: R/varFunc.R:0
msgid "cannot change parameter length of initialized \"varComb\" object"
msgstr "Parameterlänge eines initialisierten \"varComb\"-Objekts kann nicht geändert werden"

#. R/reStruct.R: stop("cannot change parameter length of initialized objects")
#: R/reStruct.R:0
msgid "cannot change parameter length of initialized objects"
msgstr "Parameterlänge von initialisierten Objekten kann nicht geändert werden."

#. R/reStruct.R: stop("cannot change the length of 'object'")
#: R/reStruct.R:0
msgid "cannot change the length of 'object'"
msgstr "Länge von 'object' kann nicht geändert werden."

#. R/varFunc.R: stop("cannot change the length of covariate in \"varFunc\" object")
#: R/varFunc.R:0
msgid "cannot change the length of covariate in \"varFunc\" object"
msgstr "Die Länge der Kovariate im \"varFunc\"-Objekt kann nicht geändert werden."

#. R/varFunc.R: stop("cannot change the length of the \"varExp\" parameter after initialization")
#: R/varFunc.R:0
msgid "cannot change the length of the \"varExp\" parameter after initialization"
msgstr "Länge des Parameters \"varExp\" kann nach der Initialisierung nicht geändert werden."

#. R/varFunc.R: stop("cannot change the length of the \"varIdent\" parameter after initialization")
#: R/varFunc.R:0
msgid "cannot change the length of the \"varIdent\" parameter after initialization"
msgstr "Länge des Parameters \"varIdent\" kann nach der Initialisierung nicht mehr geändert werden."

#. R/varFunc.R: stop("cannot change the length of the \"varStruct\" parameter after initialization")
#: R/varFunc.R:0
msgid "cannot change the length of the \"varStruct\" parameter after initialization"
msgstr "Länge des Parameters \"varStruct\" kann nach der Initialisierung nicht geändert werden."

#. R/corStruct.R: stop("cannot change the length of the parameter after initialization")
#. R/pdMat.R: stop("cannot change the length of the parameter after initialization")
#. R/varFunc.R: stop("cannot change the length of the parameter after initialization")
#. R/varFunc.R: stop("cannot change the length of the parameter after initialization")
#: R/corStruct.R:0 R/pdMat.R:0 R/varFunc.R:0
msgid "cannot change the length of the parameter after initialization"
msgstr "Länge des Parameters kann nach der Initialisierung nicht geändert werden."

#. R/corStruct.R: stop("cannot change the length of the parameter of a \"corAR1\" object")
#: R/corStruct.R:0
msgid "cannot change the length of the parameter of a \"corAR1\" object"
msgstr "Die Länge des Parameters eines \"corAR1\"-Objekts kann nicht geändert werden."

#. R/corStruct.R: stop("cannot change the length of the parameter of a \"corARMA\" object")
#: R/corStruct.R:0
msgid "cannot change the length of the parameter of a \"corARMA\" object"
msgstr "Die Länge des Parameters eines \"corARMA\"-Objekts kann nicht geändert werden."

#. R/corStruct.R: stop("cannot change the length of the parameter of a \"corCAR1\" object")
#: R/corStruct.R:0
msgid "cannot change the length of the parameter of a \"corCAR1\" object"
msgstr "Die Länge des Parameters eines \"corCAR1\"-Objekts kann nicht geändert werden."

#. R/corStruct.R: stop("cannot change the length of the parameter of a \"corCompSymm\" object")
#: R/corStruct.R:0
msgid "cannot change the length of the parameter of a \"corCompSymm\" object"
msgstr "Die Länge des Parameters eines \"corCompSymm\"-Objekts kann nicht geändert werden."

#. R/corStruct.R: stop("cannot change the length of the parameter of a \"corNatural\" object")
#: R/corStruct.R:0
msgid "cannot change the length of the parameter of a \"corNatural\" object"
msgstr "Die Länge des Parameters eines \"corNatural\"-Objekts kann nicht geändert werden."

#. R/corStruct.R: stop("cannot change the length of the parameter of a \"corStruct\" object")
#: R/corStruct.R:0
msgid "cannot change the length of the parameter of a \"corStruct\" object"
msgstr "Die Länge des Parameters eines \"corStruct\"-Objekts kann nicht geändert werden."

#. R/corStruct.R: stop("cannot change the length of the parameter of a \"corSymm\" object")
#: R/corStruct.R:0
msgid "cannot change the length of the parameter of a \"corSymm\" object"
msgstr "Die Länge des Parameters eines \"corSymm\"-Objekts kann nicht geändert werden."

#. R/pdMat.R: stop("cannot change the number of columns on an initialized object")
#: R/pdMat.R:0
msgid "cannot change the number of columns on an initialized object"
msgstr "Die Anzahl der Spalten eines initialisierten Objekts kann nicht geändert werden."

#. R/pdMat.R: stop("cannot change the parameter when length of parameters is undefined")
#. R/reStruct.R: stop("cannot change the parameter when length of parameters is undefined")
#: R/pdMat.R:0 R/reStruct.R:0
msgid "cannot change the parameter when length of parameters is undefined"
msgstr "Der Parameter kann nicht geändert werden, wenn die Länge der Parameter undefiniert ist."

#. R/lmList.R: stop("cannot do pairs of just one variable")
#. R/lme.R: stop("cannot do pairs of just one variable")
#: R/lmList.R:0 R/lme.R:0
msgid "cannot do pairs of just one variable"
msgstr "kann pairs nicht mit nur einer Variablen durchführen"

#. R/lme.R: stop("cannot evaluate groups for desired levels on 'newdata'")
#. R/nlme.R: stop("cannot evaluate groups for desired levels on 'newdata'")
#: R/lme.R:0 R/nlme.R:0
msgid "cannot evaluate groups for desired levels on 'newdata'"
msgstr "Gruppen für gewünschte Stufen auf 'newdata' können nicht ausgewertet werden"

#. R/reStruct.R: stop("cannot extract groups formula without a formula")
#: R/reStruct.R:0
msgid "cannot extract groups formula without a formula"
msgstr "Gruppenformel ohne eine Formel kann nicht extrahiert werden."

#. R/pdMat.R: stop("cannot extract matrix from an uninitialized object")
#. R/pdMat.R: stop("cannot extract matrix from an uninitialized object")
#: R/pdMat.R:0
msgid "cannot extract matrix from an uninitialized object"
msgstr "Matrix kann nicht von einem nicht initialisierten Objekt extrahiert werden."

#. R/reStruct.R: stop("cannot extract model matrix without formula")
#: R/reStruct.R:0
msgid "cannot extract model matrix without formula"
msgstr "Modellmatrix kann ohne Formel nicht extrahiert werden."

#. R/varFunc.R: stop("cannot extract parameters of uninitialized object")
#: R/varFunc.R:0
msgid "cannot extract parameters of uninitialized object"
msgstr "Parameter eines nicht initialisierten Objekts können nicht extrahiert werden."

#. R/pdMat.R: stop("cannot extract the dimensions")
#. R/pdMat.R: stop("cannot extract the dimensions")
#: R/pdMat.R:0
msgid "cannot extract the dimensions"
msgstr "Dimensionen können nicht extrahiert werden."

#. R/pdMat.R: stop("cannot extract the inverse from an uninitialized object")
#. R/pdMat.R: stop("cannot extract the inverse from an uninitialized object")
#. R/pdMat.R: stop("cannot extract the inverse from an uninitialized object")
#: R/pdMat.R:0
msgid "cannot extract the inverse from an uninitialized object"
msgstr "Inverse eines nicht initialisierten Objekts kann nicht extrahiert werden."

#. R/pdMat.R: stop("cannot extract the log of the determinant from an uninitialized object")
#. R/pdMat.R: stop("cannot extract the log of the determinant from an uninitialized object")
#. R/pdMat.R: stop("cannot extract the log of the determinant from an uninitialized object")
#. R/pdMat.R: stop("cannot extract the log of the determinant from an uninitialized object")
#: R/pdMat.R:0
msgid "cannot extract the log of the determinant from an uninitialized object"
msgstr "Der Logarithmus der Determinante eines nicht initialisierten Objekts kann nicht extrahiert werden."

#. R/pdMat.R: stop("cannot extract the matrix from an uninitialized \"pdCompSymm\" object")
#. R/pdMat.R: stop("cannot extract the matrix from an uninitialized \"pdCompSymm\" object")
#: R/pdMat.R:0
msgid "cannot extract the matrix from an uninitialized \"pdCompSymm\" object"
msgstr "Matrix eines nicht initialisierten \"pdCompSymm\"-Objekts kann nicht extrahiert werden"

#. R/pdMat.R: stop("cannot extract the matrix from an uninitialized \"pdIdent\" object")
#. R/pdMat.R: stop("cannot extract the matrix from an uninitialized \"pdIdent\" object")
#: R/pdMat.R:0
msgid "cannot extract the matrix from an uninitialized \"pdIdent\" object"
msgstr "Matrix eines nicht initialisierten \"pdIdent\"-Objekts kann nicht extrahiert werden."

#. R/pdMat.R: stop("cannot extract the matrix from an uninitialized object")
#: R/pdMat.R:0
msgid "cannot extract the matrix from an uninitialized object"
msgstr "Matrix eines nicht initialisierten Objekts kann nicht extrahiert werden."

#. R/pdMat.R: stop("cannot extract the matrix with uninitialized dimensions")
#. R/pdMat.R: stop("cannot extract the matrix with uninitialized dimensions")
#. R/pdMat.R: stop("cannot extract the matrix with uninitialized dimensions")
#. R/pdMat.R: stop("cannot extract the matrix with uninitialized dimensions")
#: R/pdMat.R:0
msgid "cannot extract the matrix with uninitialized dimensions"
msgstr "Matrix mit nicht initialisierten Dimensionen kann nicht extrahiert werden."

#. R/varFunc.R: stop("cannot fix variances in all groups")
#: R/varFunc.R:0
msgid "cannot fix variances in all groups"
msgstr "Varianzen können nicht in allen Gruppen festgehalten werden."

#. R/gls.R: gettextf("cannot get confidence intervals on var-cov components: %s",     aV)
#: R/gls.R:0
msgid "cannot get confidence intervals on var-cov components: %s"
msgstr "Konfidenzintervalle für var-cov-Komponenten können nicht bestimmt werden: %s"

#. R/lme.R: gettextf("cannot get confidence intervals on var-cov components: %s\n Consider '%s'",     aV, "which = \"fixed\"")
#: R/lme.R:0
msgid ""
"cannot get confidence intervals on var-cov components: %s\n"
" Consider '%s'"
msgstr ""
"Konfidenzintervalle für var-cov-Komponenten können nicht bestimmt werden: %s\n"
" Evtl. '%s'"

#. R/pdMat.R: stop("cannot get the inverse of an uninitialized object")
#. R/pdMat.R: stop("cannot get the inverse of an uninitialized object")
#. R/pdMat.R: stop("cannot get the inverse of an uninitialized object")
#. R/pdMat.R: stop("cannot get the inverse of an uninitialized object")
#: R/pdMat.R:0
msgid "cannot get the inverse of an uninitialized object"
msgstr "Inverse eines nicht initialisierten Objekts kann nicht bestimmt werden"

#. R/pdMat.R: stop("cannot have duplicated column names in a \"pdMat\" object")
#. R/pdMat.R: stop("cannot have duplicated column names in a \"pdMat\" object")
#: R/pdMat.R:0
msgid "cannot have duplicated column names in a \"pdMat\" object"
msgstr "In \"pdMat\"-Objekten darf es keine doppelten Spaltennamen geben."

#. R/corStruct.R: stop("cannot have zero distances in \"corSpatial\"")
#: R/corStruct.R:0
msgid "cannot have zero distances in \"corSpatial\""
msgstr "Es darf keine Null-Distanzen in \"corSpatial\" geben"

#. R/pdMat.R: stop("cannot obtain constrained coefficients with uninitialized dimensions")
#: R/pdMat.R:0
msgid "cannot obtain constrained coefficients with uninitialized dimensions"
msgstr "Eingeschränkte Koeffizienten können nicht mit nicht initialisierten Dimensionen nicht erlangt werden."

#. R/newFunc.R: stop("cannot omit grouping factor without 'form'")
#: R/newFunc.R:0
msgid "cannot omit grouping factor without 'form'"
msgstr "Gruppierungsfaktor ohne 'form' kann nicht weggelassen werden."

#. R/nlsList.R: stop("cannot use an anonymous function for the model")
#: R/nlsList.R:0
msgid "cannot use an anonymous function for the model"
msgstr "eine anonyme Funktion kann für das Modell nicht benutzt werden"

#. R/nlme.R: warning("cannot use smaller level of grouping for \"correlation\" than for \"random\". Replacing the former with the latter.")
#: R/nlme.R:0
msgid "cannot use smaller level of grouping for \"correlation\" than for \"random\". Replacing the former with the latter."
msgstr "Zur Gruppierung in \"correlation\" kann keine kleinere Stufe als für \"random\" benutzt werden. Ersteres wird durch letzteres ersetzt."

#. R/lme.R: warning("cannot use smaller level of grouping for 'correlation' than for 'random'. Replacing the former with the latter.")
#: R/lme.R:0
msgid "cannot use smaller level of grouping for 'correlation' than for 'random'. Replacing the former with the latter."
msgstr "Für die Gruppierung von 'correlation' kann keine kleinere Stufe als für 'random' benutzt werden. Ersteres wird durch letzteres ersetzt."

#. R/groupedData.R: warning("collapsing level cannot be smaller than display level; setting it to the display level")
#: R/groupedData.R:0
msgid "collapsing level cannot be smaller than display level; setting it to the display level"
msgstr "Die Collapsing-Stufe kann nicht kleiner sein, als die Anzeigestufe; sie wird auf die Anzeigestufe gesetzt."

#. R/gls.R: gettextf("computed \"gls\" fit is singular, rank %s", rnk)
#: R/gls.R:0
msgid "computed \"gls\" fit is singular, rank %s"
msgstr "errechneter \"gls\"-Fit ist singulär, Rang %s"

#. R/varFunc.R: stop("constant in \"varConstProp\" structure must be > 0")
#. R/varFunc.R: stop("constant in \"varConstProp\" structure must be > 0")
#: R/varFunc.R:0
msgid "constant in \"varConstProp\" structure must be > 0"
msgstr "Konstante in \"varConstPower\"-Struktur muss > 0 sein."

#. R/lmList.R: stop("covariate must be a data frame")
#. R/lme.R: stop("covariate must be a data frame")
#: R/lmList.R:0 R/lme.R:0
msgid "covariate must be a data frame"
msgstr "Kovariate muss ein Dataframe sein"

#. R/lmList.R: stop("covariate must be numeric")
#. R/newMethods.R: stop("covariate must be numeric")
#: R/lmList.R:0 R/newMethods.R:0
msgid "covariate must be numeric"
msgstr "Kovariate muss numerisch sein"

#. R/lme.R: stop("covariate must have a level attribute when 'id' is a formula")
#: R/lme.R:0
msgid "covariate must have a level attribute when 'id' is a formula"
msgstr "Kovariate muss ein Stufenattribut haben, wenn 'id' eine Formel ist"

#. R/lme.R: stop("covariate must have a level attribute when 'idLabels' is a formula")
#: R/lme.R:0
msgid "covariate must have a level attribute when 'idLabels' is a formula"
msgstr "Kovariate muss ein Stufenattribut haben, wenn 'idLabels' eine Formel ist"

#. R/lme.R: stop("covariate must have a level attribute when groups are present")
#: R/lme.R:0
msgid "covariate must have a level attribute when groups are present"
msgstr "Kovariate muss ein Stufenattribut haben, wenn Gruppen vorhanden sind"

# http://www.sozpsy.uni-hannover.de/marienthal/glossar/html/k37.htm
#. R/corStruct.R: stop("covariate must have unique integer values within groups for \"corARMA\" objects")
#: R/corStruct.R:0
#, fuzzy
msgid "covariate must have unique integer values within groups for \"corARMA\" objects"
msgstr "Kovariate muss eindeutige Werte innerhalb der Gruppen für \"corARMA-Objekte\" haben."

# http://www.sozpsy.uni-hannover.de/marienthal/glossar/html/k37.htm
#. R/corStruct.R: stop("covariate must have unique values within groups for \"corAR1\" objects")
#: R/corStruct.R:0
msgid "covariate must have unique values within groups for \"corAR1\" objects"
msgstr "Kovariate muss eindeutige Werte innerhalb der Gruppen für \"corAR1-Objekte\" haben."

# http://www.sozpsy.uni-hannover.de/marienthal/glossar/html/k37.htm
#. R/corStruct.R: stop("covariate must have unique values within groups for \"corCAR1\" objects")
#: R/corStruct.R:0
msgid "covariate must have unique values within groups for \"corCAR1\" objects"
msgstr "Kovariate muss eindeutige Werte innerhalb der Gruppen für \"corCAR1-Objekte\" haben."

#. R/corStruct.R: stop("covariate must have unique values within groups for \"corNatural\" objects")
#: R/corStruct.R:0
msgid "covariate must have unique values within groups for \"corNatural\" objects"
msgstr "Kovariate muss eindeutige Werte innerhalb der Gruppen für \"corNatural-Objekte\" haben."

# http://www.sozpsy.uni-hannover.de/marienthal/glossar/html/k37.htm
#. R/corStruct.R: stop("covariate must have unique values within groups for \"corSymm\" objects")
#: R/corStruct.R:0
msgid "covariate must have unique values within groups for \"corSymm\" objects"
msgstr "Kovariate muss eindeutige Werte innerhalb der Gruppen für \"corSymm\"-Objekte haben."

#. R/newMethods.R: stop("data argument to \"data.frame\" method for 'getGroups' does not make sense")
#: R/newMethods.R:0
msgid "data argument to \"data.frame\" method for 'getGroups' does not make sense"
msgstr "Datenargument für \"data.frame\"-Methode für 'getGroups' nicht sinnvoll"

#. R/gls.R: gettextf("data in %s call must evaluate to a data frame", sQuote(substitute(object)))
#. R/lme.R: gettextf("data in %s call must evaluate to a data frame", sQuote(substitute(object)))
#: R/gls.R:0 R/lme.R:0
msgid "data in %s call must evaluate to a data frame"
msgstr "Daten im %s-Aufruf müssen einen Dataframe ergeben"

#. R/simulate.R: stop("degrees of freedom and weights must have the same length")
#: R/simulate.R:0
msgid "degrees of freedom and weights must have the same length"
msgstr "Freiheitsgrade und Gewichte müssen die gleiche Länge haben."

#. R/zzMethods.R: warning("deviance undefined for REML fit")
#: R/zzMethods.R:0
msgid "deviance undefined for REML fit"
msgstr "Devianz für REML Anpassung nicht definiert"

#. R/pdMat.R: stop("dimnames of 'value' must match or be NULL")
#: R/pdMat.R:0
msgid "dimnames of 'value' must match or be NULL"
msgstr "dimnames von 'value' müssen übereinstimmen oder NULL sein"

# R/corStruct.R
#. R/corStruct.R: gettextf("do not know how to calculate correlation matrix of %s object",     dQuote(class(object)[1]))
#: R/corStruct.R:0
msgid "do not know how to calculate correlation matrix of %s object"
msgstr "Es ist nicht bekannt, wie die Korrelationsmatrix des Objekts %s berechnet wird."

#. R/varFunc.R: gettextf("do not know how to get coefficients for %s object",     dQuote(class(object)[1]))
#: R/varFunc.R:0
msgid "do not know how to get coefficients for %s object"
msgstr "nicht bekannt, wie Koeffizienten erlangt werden für %s-Objekt"

#. R/pdMat.R: stop("do not know how to obtain constrained coefficients")
#: R/pdMat.R:0
msgid "do not know how to obtain constrained coefficients"
msgstr "Es ist nicht bekannt, wie eingeschränkte Koeffizienten bestimmt werden können."

#. R/corStruct.R: gettextf("do not know how to obtain parameters of %s object",     dQuote(class(object)[1]))
#: R/corStruct.R:0
msgid "do not know how to obtain parameters of %s object"
msgstr "Es ist nicht bekannt, wie Parameter des Objekts %s abgefragt werden."

#. R/reStruct.R: stop("elements in 'object' must be formulas or \"pdMat\" objects")
#: R/reStruct.R:0
msgid "elements in 'object' must be formulas or \"pdMat\" objects"
msgstr "Elemente in 'object' müssen Formeln oder \"pdMat\"-Objekte sein."

#. R/lme.R: gettextf("fewer observations than random effects in all level %s groups",     Q, domain = "R-nlme")
#. R/nlme.R: gettextf("fewer observations than random effects in all level %s groups",     Q)
#: R/lme.R:0 R/nlme.R:0
msgid "fewer observations than random effects in all level %s groups"
msgstr "weniger Beobachtungen als zufällige Effekte in allen Gruppen der Stufe %s"

#. R/groupedData.R: stop("first argument to 'groupedData' must be a two-sided formula")
#: R/groupedData.R:0
msgid "first argument to 'groupedData' must be a two-sided formula"
msgstr "erstes Argument für 'groupedData' muss eine zweiseitige Formel sein"

#. R/groupedData.R: stop("first argument to 'nfGroupedData' must be a two-sided formula")
#: R/groupedData.R:0
msgid "first argument to 'nfGroupedData' must be a two-sided formula"
msgstr "erstes Argument für 'nfGroupedData' muss eine zweiseitige Formel sein"

#. R/groupedData.R: stop("first argument to 'nmGroupedData' must be a two-sided formula")
#: R/groupedData.R:0
msgid "first argument to 'nmGroupedData' must be a two-sided formula"
msgstr "erstes Argument für 'nmGroupedData' muss eine zweiseitige Formel sein"

#. R/lme.R: stop("first model has a different response from the rest")
#: R/lme.R:0
msgid "first model has a different response from the rest"
msgstr "erstes Modell hat eine vom Rest abweichende Antwort"

#. R/lme.R: warning("fitted objects with different fixed effects. REML comparisons are not meaningful.")
#: R/lme.R:0
msgid "fitted objects with different fixed effects. REML comparisons are not meaningful."
msgstr ""
"Gefittete Objekte mit unterschiedlichen festen Effekten. REML\n"
"Vergleiche haben keine Bedeutung."

#. R/varFunc.R: stop("fixed parameter names in 'varIdent' must be a subset of group names")
#: R/varFunc.R:0
msgid "fixed parameter names in 'varIdent' must be a subset of group names"
msgstr "Feste Parameternamen in 'varIdent' müssen eine Teilmenge von Gruppennamen sein."

#. R/varFunc.R: stop("fixed parameters must have group names")
#. R/varFunc.R: stop("fixed parameters must have group names")
#. R/varFunc.R: stop("fixed parameters must have group names")
#. R/varFunc.R: stop("fixed parameters must have group names")
#: R/varFunc.R:0
msgid "fixed parameters must have group names"
msgstr "Feste Parameter müssen Gruppennamen haben."

#. R/varFunc.R: stop("fixed parameters must have group names in 'varExp'")
#: R/varFunc.R:0
msgid "fixed parameters must have group names in 'varExp'"
msgstr "Feste Parameter müssen Gruppennamen in 'varExp' haben."

#. R/varFunc.R: stop("fixed parameters must have group names in 'varPower'")
#: R/varFunc.R:0
msgid "fixed parameters must have group names in 'varPower'"
msgstr "Feste Parameter müssen Gruppennamen in 'varPower' haben."

#. R/varFunc.R: stop("fixed parameters must have names in 'varIdent'")
#: R/varFunc.R:0
msgid "fixed parameters must have names in 'varIdent'"
msgstr "Feste Parameter müssen in 'varIdent' Namen haben."

#. R/lme.R: stop("fixed-effects model must be a formula of the form \"resp ~ pred\"")
#. R/simulate.R: stop("\nfixed-effects model must be a formula of the form \"resp ~ pred\"")
#: R/lme.R:0 R/simulate.R:0
msgid "fixed-effects model must be a formula of the form \"resp ~ pred\""
msgstr "Feste-Effekte-Modell muss eine Formel der Form \"resp ~ pred\" sein."

#. R/newFunc.R: stop("formula(object) must return a formula")
#: R/newFunc.R:0
msgid "formula(object) must return a formula"
msgstr "Formel(Objekt) muss eine Formel zurückgeben."

#. R/nlme.R: stop("formulae in 'fixed' must be of the form \"parameter ~ expr\"")
#. R/nlme.R: stop("formulae in 'fixed' must be of the form \"parameter ~ expr\"")
#: R/nlme.R:0
msgid "formulae in 'fixed' must be of the form \"parameter ~ expr\""
msgstr "Formeln in 'fixed' müssen die Form \"parameter ~ expr\" haben."

#. R/gnls.R: stop("formulae in 'params' must be of the form \"parameter ~ expr\"")
#. R/gnls.R: stop("formulae in 'params' must be of the form \"parameter ~ expr\"")
#: R/gnls.R:0
msgid "formulae in 'params' must be of the form \"parameter ~ expr\""
msgstr "Formeln in 'params' müssen die Form \"parameter ~ expr\" haben."

#. R/nlme.R: stop("formulae in 'random' must be of the form \"parameter ~ expr\"")
#. R/nlme.R: stop("formulae in 'random' must be of the form \"parameter ~ expr\"")
#: R/nlme.R:0
msgid "formulae in 'random' must be of the form \"parameter ~ expr\""
msgstr "Formeln in 'random' müssen die Form \"parameter ~ expr\" haben."

#. R/nlme.R: gettextf("groups levels mismatch in 'random' and starting values for 'random' at level %s",     namGrp[i])
#: R/nlme.R:0
msgid "groups levels mismatch in 'random' and starting values for 'random' at level %s"
msgstr "Gruppenstufen stimmen in 'random' und in den Startwerten für 'random' auf Stufe %s nicht überein."

#. R/varFunc.R: warning("ignoring 'group' in \"varFixed\" formula")
#: R/varFunc.R:0
msgid "ignoring 'group' in \"varFixed\" formula"
msgstr "'group' in \"varFixed\"-Formel wird ignoriert."

#. R/pdMat.R: warning("ignoring argument 'form'")
#. R/pdMat.R: warning("ignoring argument 'form'")
#: R/pdMat.R:0
msgid "ignoring argument 'form'"
msgstr "Argument 'form' wird ignoriert"

#. R/pdMat.R: warning("ignoring argument 'nam'")
#: R/pdMat.R:0
msgid "ignoring argument 'nam'"
msgstr "Argument 'nam' wird ignoriert"

#. R/varFunc.R: warning("ignoring initial values (no grouping factor)")
#: R/varFunc.R:0
msgid "ignoring initial values (no grouping factor)"
msgstr "Startwerte werden ignoriert (kein Gruppierungsfaktor)"

#. R/nlme.R: stop("incompatible formulas for groups in \"random\" and \"correlation\"")
#. R/nlme.R: stop("incompatible formulas for groups in \"random\" and \"correlation\"")
#: R/nlme.R:0
msgid "incompatible formulas for groups in \"random\" and \"correlation\""
msgstr "inkompatible Formeln für Gruppen in \"random\" und \"correlation\""

#. R/lme.R: stop("incompatible formulas for groups in 'random' and 'correlation'")
#. R/lme.R: stop("incompatible formulas for groups in 'random' and 'correlation'")
#: R/lme.R:0
msgid "incompatible formulas for groups in 'random' and 'correlation'"
msgstr "inkompatible Formeln für Gruppen in 'random' und 'correlation'"

#. R/lme.R: stop("incompatible lengths for 'random' and grouping factors")
#. R/nlme.R: stop("incompatible lengths for 'random' and grouping factors")
#. R/simulate.R: stop("incompatible lengths for 'random' and grouping factors")
#: R/lme.R:0 R/nlme.R:0 R/simulate.R:0
msgid "incompatible lengths for 'random' and grouping factors"
msgstr "inkompatible Längen für 'random' und Gruppierungsfaktoren"

#. R/reStruct.R: stop("incompatible lengths for object names")
#: R/reStruct.R:0
msgid "incompatible lengths for object names"
msgstr "inkompatible Länge für Objektnamen"

#. R/VarCov.R: gettextf("individual %s was not used in the fit", sQuote(individ))
#. R/VarCov.R: gettextf("individual %s was not used in the fit", sQuote(individual))
#: R/VarCov.R:0
msgid "individual %s was not used in the fit"
msgstr "Individuum %s wurde in der Anpassung nicht benutzt."

#. R/corStruct.R: stop("initial value for \"corLin\" parameters of wrong dimension")
#. R/corStruct.R: stop("initial value for \"corLin\" parameters of wrong dimension")
#: R/corStruct.R:0
msgid "initial value for \"corLin\" parameters of wrong dimension"
msgstr "Anfangswert für Parameter \"corLin\" hat falsche Dimension."

#. R/corStruct.R: stop("initial value for \"corNatural\" parameters of wrong dimension")
#: R/corStruct.R:0
msgid "initial value for \"corNatural\" parameters of wrong dimension"
msgstr "Anfangswert für \"corNatural\"-Parameter hat falsche Dimension"

#. R/corStruct.R: stop("initial value for \"corSpatial\" parameters of wrong dimension")
#. R/corStruct.R: stop("initial value for \"corSpatial\" parameters of wrong dimension")
#: R/corStruct.R:0
msgid "initial value for \"corSpatial\" parameters of wrong dimension"
msgstr "Anfangswert des Parameters \"corSpatial\" hat falsche Dimension"

#. R/corStruct.R: stop("initial value for \"corSpher\" parameters of wrong dimension")
#. R/corStruct.R: stop("initial value for \"corSpher\" parameters of wrong dimension")
#: R/corStruct.R:0
msgid "initial value for \"corSpher\" parameters of wrong dimension"
msgstr "Anfangswert für Parameter \"corSpher\" hat falsche Dimension"

#. R/corStruct.R: stop("initial value for \"corSymm\" parameters of wrong dimension")
#: R/corStruct.R:0
msgid "initial value for \"corSymm\" parameters of wrong dimension"
msgstr "Anfangswert für \"corSymm\"-Parameter hat falsche Dimension"

#. R/lme.R: warning("initial value for \"reStruct\" overwritten in 'lme.lmList'")
#: R/lme.R:0
msgid "initial value for \"reStruct\" overwritten in 'lme.lmList'"
msgstr "Anfangswert für \"reStruct\" in 'lme.lmList' überschrieben"

#. R/varFunc.R: gettextf("initial value for \"varExp\" should be of length %d",     nStratVar)
#: R/varFunc.R:0
msgid "initial value for \"varExp\" should be of length %d"
msgstr "Startwert von \"varExp\" sollte Länge %d haben."

#. R/varFunc.R: stop("initial value for \"varExp\" should be of length 1")
#: R/varFunc.R:0
msgid "initial value for \"varExp\" should be of length 1"
msgstr "Anfangswert für \"varExp\" sollte die Länge 1 haben."

#. R/varFunc.R: gettextf("initial value for \"varIdent\" should be of length %d",     len)
#: R/varFunc.R:0
msgid "initial value for \"varIdent\" should be of length %d"
msgstr "Startwert von \"varIndent\" sollte die Länge %d haben."

#. R/varFunc.R: gettextf("initial value for \"varPower\" should be of length %d",     nStratVar)
#: R/varFunc.R:0
msgid "initial value for \"varPower\" should be of length %d"
msgstr "Startwert von \"varPower\" sollte Länge %d haben."

#. R/varFunc.R: stop("initial value for \"varPower\" should be of length 1")
#: R/varFunc.R:0
msgid "initial value for \"varPower\" should be of length 1"
msgstr "Anfangswert für \"varPower\" sollte die Länge 1 haben."

#. R/corStruct.R: warning("initial value for 'range' less than minimum distance. Setting it to 1.1 * min(distance)")
#. R/corStruct.R: warning("initial value for 'range' less than minimum distance. Setting it to 1.1 * min(distance)")
#: R/corStruct.R:0
msgid "initial value for 'range' less than minimum distance. Setting it to 1.1 * min(distance)"
msgstr "Anfangswert für 'range' kleiner als minimale Distanz. Er wird auf 1.1 * min (distance) gesetzt."

#. R/nlme.R: warning("initial value for 'reStruct' overwritten in 'nlme.nlsList'")
#: R/nlme.R:0
msgid "initial value for 'reStruct' overwritten in 'nlme.nlsList'"
msgstr "Anfangswert für 'reStruct' in 'nlme.nlsList' überschrieben"

#. R/corStruct.R: stop("initial value for parameter of wrong length")
#: R/corStruct.R:0
msgid "initial value for parameter of wrong length"
msgstr "Anfangswerte für Parameter hat falsche Länge"

#. R/corStruct.R: gettextf("initial value in \"corCompSymm\" must be greater than %s",     attr(object, "inf"))
#: R/corStruct.R:0
msgid "initial value in \"corCompSymm\" must be greater than %s"
msgstr "Anfangswert in \"corCompSymm\" muss größer als %s sein."

#. R/corStruct.R: stop("initial value of nugget ratio must be between 0 and 1")
#. R/corStruct.R: stop("initial value of nugget ratio must be between 0 and 1")
#. R/corStruct.R: stop("initial value of nugget ratio must be between 0 and 1")
#: R/corStruct.R:0
msgid "initial value of nugget ratio must be between 0 and 1"
msgstr "Anfangswert des Nugget-Anteils muss zwischen 0 und 1 liegen"

#. R/varFunc.R: gettext("initial value should be of length %d", nStratVar)
#. R/varFunc.R: gettext("initial value should be of length %d", aux)
#. R/varFunc.R: gettext("initial value should be of length %d", nStratVar)
#. R/varFunc.R: gettext("initial value should be of length %d", aux)
#: R/varFunc.R:0
msgid "initial value should be of length %d"
msgstr "Startwert sollte Länge %d haben."

#. R/corStruct.R: stop("initial values for \"corNatural\" do not define a positive-definite correlation structure")
#: R/corStruct.R:0
msgid "initial values for \"corNatural\" do not define a positive-definite correlation structure"
msgstr "Anfangswerte für \"corNatural\" definieren keine positiv-definite Korrelationsstruktur."

#. R/corStruct.R: stop("initial values for \"corNatural\" must be between -1 and 1")
#: R/corStruct.R:0
msgid "initial values for \"corNatural\" must be between -1 and 1"
msgstr "Anfangswerte für \"corNatural\" müssen zwischen -1 und 1 liegen."

#. R/corStruct.R: stop("initial values for \"corSymm\" do not define a positive-definite correlation structure")
#: R/corStruct.R:0
msgid "initial values for \"corSymm\" do not define a positive-definite correlation structure"
msgstr "Anfangswerte für \"corSymm\" definieren keine positiv-definite Korrelationsstruktur."

#. R/corStruct.R: stop("initial values for \"corSymm\" must be between -1 and 1")
#: R/corStruct.R:0
msgid "initial values for \"corSymm\" must be between -1 and 1"
msgstr "Anfangswerte für \"corSymm\" müssen zwischen -1 und 1 liegen."

#. R/varFunc.R: stop("initial values for 'varIdent' must be > 0")
#: R/varFunc.R:0
msgid "initial values for 'varIdent' must be > 0"
msgstr "Startwerte für 'varIdent' müssen > 0 sein."

#. R/varFunc.R: stop("initial values must have group names in 'varExp'")
#: R/varFunc.R:0
msgid "initial values must have group names in 'varExp'"
msgstr "Anfangswerte müssen Gruppennamen in 'varExp' haben."

#. R/varFunc.R: stop("initial values must have group names in 'varIdent'")
#: R/varFunc.R:0
msgid "initial values must have group names in 'varIdent'"
msgstr "Startwerte müssen Gruppennamen in 'varIdent' haben."

#. R/varFunc.R: stop("initial values must have group names in 'varPower'")
#: R/varFunc.R:0
msgid "initial values must have group names in 'varPower'"
msgstr "Anfangswerte müssen Gruppennamen in 'varPower' haben."

#. R/pdMat.R: warning("initializing \"pdCompSymm\" object is not positive definite")
#: R/pdMat.R:0
msgid "initializing \"pdCompSymm\" object is not positive definite"
msgstr "Initialisierendes \"pdCompSymm\"-Objekt ist nicht positiv-definit"

#. R/newMethods.R: stop("invalid formula for groups")
#: R/newMethods.R:0
msgid "invalid formula for groups"
msgstr "ungültige Formel für Gruppen"

#. R/pdMat.R: stop("length of 'nam' not consistent with dimensions of initial value")
#: R/pdMat.R:0
msgid "length of 'nam' not consistent with dimensions of initial value"
msgstr "Länge von 'nam' nicht konsistent mit Dimensionen des Startwerts"

# R/newMethods.R
#. R/newMethods.R: gettextf("level of %s does not match formula %s", level[aux],     sQuote(deparse(form)))
#. R/newMethods.R: gettextf("level of %s does not match formula %s", level[aux],     sQuote(deparse(form)))
#: R/newMethods.R:0
msgid "level of %s does not match formula %s"
msgstr "Stufe von %s passt nicht zu Formel %s"

#. R/nlme.R: gettextf("list with starting values for random effects must have names or be of length %d",     Q)
#: R/nlme.R:0
msgid "list with starting values for random effects must have names or be of length %d"
msgstr "Liste mit Startwerten für Zufallseffekte muss Namen haben oder %d lang sein."

#. R/lmList.R: stop("log-likelihood not available with NULL fits")
#: R/lmList.R:0
msgid "log-likelihood not available with NULL fits"
msgstr "Log-likelihood nicht mit NULL-Fit verfügbar"

#. R/lme.R: gettext("maximum number of iterations (lmeControl(maxIter)) reached without convergence",     domain = "R-nlme")
#: R/lme.R:0
msgid "maximum number of iterations (lmeControl(maxIter)) reached without convergence"
msgstr "maximale Anzahl der Iterationen (lmeControl(maxIter)) ohne Konvergenz erreicht"

#. R/nlme.R: gettextf("maximum number of iterations (maxIter = %d) reached without convergence",     controlvals$maxIter, domain = "R-nlme")
#: R/nlme.R:0
msgid "maximum number of iterations (maxIter = %d) reached without convergence"
msgstr "maximale Anzahl der Iterationen (maxIter = %d) ohne Konvergenz erreicht"

#. R/gls.R: stop("maximum number of iterations reached without convergence")
#: R/gls.R:0
msgid "maximum number of iterations reached without convergence"
msgstr "maximale Anzahl der Iterationen ohne Konvergenz erreicht"

#. R/varFunc.R: stop("mismatch between group names and fixed values names")
#. R/varFunc.R: stop("mismatch between group names and fixed values names")
#. R/varFunc.R: stop("mismatch between group names and fixed values names")
#. R/varFunc.R: stop("mismatch between group names and fixed values names")
#: R/varFunc.R:0
msgid "mismatch between group names and fixed values names"
msgstr "keine Übereinstimmung zwischen Gruppennamen und festen Wertnamen"

#. R/nlsList.R: stop("missing call attribute in \"nlsList\" object")
#: R/nlsList.R:0
msgid "missing call attribute in \"nlsList\" object"
msgstr "fehlendes Aufrufattribut in \"nlsList\"-Objekt"

#. R/nlme.R: stop("model formula must be of the form \"resp ~ pred\"")
#: R/nlme.R:0
msgid "model formula must be of the form \"resp ~ pred\""
msgstr "Modell-Formel muss die Form \"resp ~ pred\" haben."

#. R/gls.R: stop("model must be a formula of the form \"resp ~ pred\"")
#: R/gls.R:0
msgid "model must be a formula of the form \"resp ~ pred\""
msgstr "Modell muss eine Formel der Form \"resp ~ pred\" sein."

#. R/simulate.R: stop("models with \"corStruct\" and/or \"varFunc\" objects not allowed")
#. R/simulate.R: stop("models with \"corStruct\" and/or \"varFunc\" objects not allowed")
#: R/simulate.R:0
msgid "models with \"corStruct\" and/or \"varFunc\" objects not allowed"
msgstr "Modelle mit \"corStruct\"- und/oder \"varFunc\"-Objekten nicht erlaubt"

#. R/simulate.R: stop("more than one degree of freedom is needed when one them is zero.")
#: R/simulate.R:0
msgid "more than one degree of freedom is needed when one them is zero."
msgstr "Mehr als ein Freiheitsgrad wird benötigt, wenn einer von ihnen Null ist."

#. R/corStruct.R: stop("moving average order must be a non-negative integer")
#: R/corStruct.R:0
msgid "moving average order must be a non-negative integer"
msgstr "Ordnung des gleitenden Durchschnitts muss eine nicht-negative Ganzzahl sein."

#. R/lmList.R: stop("multiple levels not allowed")
#. R/lmList.R: stop("multiple levels not allowed")
#. R/nlsList.R: stop("multiple levels not allowed")
#: R/lmList.R:0 R/nlsList.R:0
msgid "multiple levels not allowed"
msgstr "mehrere Stufen nicht erlaubt"

#. R/pdMat.R: stop("must give names when initializing \"pdCompSymm\" from parameter without a formula")
#: R/pdMat.R:0
msgid "must give names when initializing \"pdCompSymm\" from parameter without a formula"
msgstr "Wenn \"pdCompSymm\" über Parameter ohne eine Formel initialisiert wird, müssen Namen vergeben werden."

#. R/pdMat.R: stop("must give names when initializing \"pdIdent\" from parameter without a formula")
#: R/pdMat.R:0
msgid "must give names when initializing \"pdIdent\" from parameter without a formula"
msgstr "Wenn \"pdIdent\" über Parameter ohne eine Formel initialisiert wird, müssen Namen gegeben werden."

#. R/pdMat.R: stop("must give names when initializing from matrix or parameter")
#: R/pdMat.R:0
msgid "must give names when initializing from matrix or parameter"
msgstr "Namen müssen vergeben werden, wenn von Matrix oder Parameter initialisiert wird"

#. R/pdMat.R: stop("must have formula when no names are given")
#: R/pdMat.R:0
msgid "must have formula when no names are given"
msgstr "muss Formel haben, wenn keine Namen gegeben sind"

#. R/pdMat.R: stop("names being assigned do not correspond to a permutation of previous names")
#: R/pdMat.R:0
msgid "names being assigned do not correspond to a permutation of previous names"
msgstr "Zugeordnete Namen entsprechen keiner Permutation vorheriger Namen."

#. R/nlme.R: gettextf("names mismatch in 'random' and starting values  for 'random' at level %s",     namGrp[i])
#: R/nlme.R:0
msgid "names mismatch in 'random' and starting values  for 'random' at level %s"
msgstr "Namen  in 'random' und in den Startwerten für 'random' auf Stufe %s passen nicht "

#. R/pdMat.R: stop("names of 'value' are not consistent with 'nam' argument")
#: R/pdMat.R:0
msgid "names of 'value' are not consistent with 'nam' argument"
msgstr "Namen von 'value' sind nicht mit dem Argument 'nam' konsistent"

#. R/pdMat.R: stop("names of object and value must match")
#: R/pdMat.R:0
msgid "names of object and value must match"
msgstr "Namen von Objekt und Wert müssen übereinstimmen."

#. R/varFunc.R: stop("names of starting value for \"varIdent\" object must contain all but one of the stratum levels")
#: R/varFunc.R:0
msgid "names of starting value for \"varIdent\" object must contain all but one of the stratum levels"
msgstr "Die Namen des Startwerts für ein \"varIdent\"-Objekt müssen alles außer einer Schichtstufe enthalten."

#. R/gls.R: stop("need an object with call component")
#. R/gnls.R: stop("need an object with call component")
#. R/lmList.R: stop("need an object with call component")
#. R/lme.R: stop("need an object with call component")
#. R/nlme.R: stop("need an object with call component")
#: R/gls.R:0 R/gnls.R:0 R/lmList.R:0 R/lme.R:0 R/nlme.R:0
msgid "need an object with call component"
msgstr "ein Objekt mit Aufruf-Komponenten wird benötigt"

#. R/corStruct.R: stop("need data to calculate covariate")
#: R/corStruct.R:0
msgid "need data to calculate covariate"
msgstr "Um Kovariate zu berechnen, werden Daten benötigt."

#. R/corStruct.R: stop("need data to calculate covariate of \"corStruct\" object")
#: R/corStruct.R:0
msgid "need data to calculate covariate of \"corStruct\" object"
msgstr "Zur Berechnung der Kovariate des \"corStruct\"-Objekts werden Daten benötigt."

#. R/simulate.R: stop("negative degrees of freedom not allowed")
#: R/simulate.R:0
msgid "negative degrees of freedom not allowed"
msgstr "negative Freiheitsgrade nicht erlaubt"

#. R/gls.R: stop("no coefficients to fit")
#: R/gls.R:0
msgid "no coefficients to fit"
msgstr "keine Koeffizienten anzupassen"

#. R/lme.R: stop("no condensed linear model")
#: R/lme.R:0
msgid "no condensed linear model"
msgstr "kein zusammengefasstes lineares Modell"

#. R/pdMat.R: stop("no default method for extracting the square root of a \"pdMat\" object")
#: R/pdMat.R:0
msgid "no default method for extracting the square root of a \"pdMat\" object"
msgstr "keine Standardmethode, um die Quadratwurzel eines \"pdMat\"-Objekts zu extrahieren"

#. R/newFunc.R: stop("no degrees of freedom for estimating std. dev.")
#: R/newFunc.R:0
msgid "no degrees of freedom for estimating std. dev."
msgstr "keine Freiheitsgrade für Schätzung von Standardabweichung"

#. R/simulate.R: stop("no degrees of freedom specified")
#: R/simulate.R:0
msgid "no degrees of freedom specified"
msgstr "keine Freiheitsgrade angegeben"

#. R/lme.R: stop("no effects allowed in right side of formula")
#: R/lme.R:0
msgid "no effects allowed in right side of formula"
msgstr "keine Effekte auf der rechten Seite der Formel erlaubt"

#. R/lme.R: stop("no fitted \"lme\" object")
#: R/lme.R:0
msgid "no fitted \"lme\" object"
msgstr "kein angepasstes \"lme\"-Objekt"

#. R/gnls.R: stop("no initial values for model parameters")
#: R/gnls.R:0
msgid "no initial values for model parameters"
msgstr "keine Anfangswerte für Modellparameter"

#. R/newMethods.R: stop("no model variogram available with 'showModel = TRUE'")
#: R/newMethods.R:0
msgid "no model variogram available with 'showModel = TRUE'"
msgstr "kein Modell-Variogramm mit 'showModel = TRUE' verfügbar"

#. R/lmList.R: stop("nonexistent group in 'newdata'")
#: R/lmList.R:0
msgid "nonexistent group in 'newdata'"
msgstr "nicht existierende Gruppe in 'newdata'"

#. R/varFunc.R: stop("nonexistent group names for initial values")
#. R/varFunc.R: stop("nonexistent group names for initial values")
#: R/varFunc.R:0
msgid "nonexistent group names for initial values"
msgstr "Nicht existierende Gruppenamen für Startwerte"

#. R/varFunc.R: stop("nonexistent group names for initial values in \"varExp\"")
#: R/varFunc.R:0
msgid "nonexistent group names for initial values in \"varExp\""
msgstr "nicht existente Gruppennamen für Anfangswerte in \"varExp\""

#. R/varFunc.R: stop("nonexistent group names for initial values in \"varPower\"")
#: R/varFunc.R:0
msgid "nonexistent group names for initial values in \"varPower\""
msgstr "nicht existierende Gruppennamen für Anfangswerte in \"varPower\""

#. R/varFunc.R: stop("nonexistent group names for initial values in 'varIdent'")
#: R/varFunc.R:0
msgid "nonexistent group names for initial values in 'varIdent'"
msgstr "nicht existente Gruppennamen für Startwerte in 'varIdent'"

#. R/lmList.R: stop("nonexistent group requested in 'subset'")
#: R/lmList.R:0
msgid "nonexistent group requested in 'subset'"
msgstr "nicht existierende Gruppe in 'subset' angefordert."

#. R/lmList.R: stop("nonexistent groups requested in 'subset'")
#. R/lmList.R: stop("nonexistent groups requested in 'subset'")
#. R/lmList.R: stop("nonexistent groups requested in 'subset'")
#. R/lmList.R: stop("nonexistent groups requested in 'subset'")
#: R/lmList.R:0
msgid "nonexistent groups requested in 'subset'"
msgstr "nicht existierende Gruppen in 'subset' angefordert"

#. R/zzMethods.R: stop("not (yet) implemented.  Contributions are welcome; use intervals() instead (for now)")
#: R/zzMethods.R:0
msgid "not (yet) implemented.  Contributions are welcome; use intervals() instead (for now)"
msgstr "(nocht) nicht implementiert.  Beiträge sind willkommen; Für den Moment stattdessen intervals() nutzen"

#. R/VarCov.R: stop("not implemented for \"nlme\" objects")
#: R/VarCov.R:0
msgid "not implemented for \"nlme\" objects"
msgstr "nicht für \"nlme\"-Objekte implementiert"

#. R/VarCov.R: stop("not implemented for correlation structures without a grouping factor")
#: R/VarCov.R:0
msgid "not implemented for correlation structures without a grouping factor"
msgstr ""

#. R/VarCov.R: stop("not implemented for multiple levels of nesting")
#: R/VarCov.R:0
msgid "not implemented for multiple levels of nesting"
msgstr "nicht für mehrstufige Schachtelung implementiert"

#. R/VarCov.R: stop("not implemented for uncorrelated errors")
#: R/VarCov.R:0
#, fuzzy
msgid "not implemented for uncorrelated errors"
msgstr "nicht für \"nlme\"-Objekte implementiert"

#. R/nlme.R: gettextf("number of columns in starting values for random component at level %s should be %d",     namGrp[i], rlength[i])
#: R/nlme.R:0
msgid "number of columns in starting values for random component at level %s should be %d"
msgstr "Anzahl der Spalten in Startwerten für Zufallskomponente auf Stufe %s sollte %d sein."

#. R/nlme.R: gettextf("number of rows in starting values for random component at level %s should be %d",     namGrp[i], Dims$ngrps[i])
#: R/nlme.R:0
msgid "number of rows in starting values for random component at level %s should be %d"
msgstr "Anzahl der Zeilen in Startwerten für Zufallskomponente auf Stufe %s sollte %d sein."

#. R/gnls.R: stop("object formula must be of the form \"resp ~ pred\"")
#: R/gnls.R:0
msgid "object formula must be of the form \"resp ~ pred\""
msgstr "Objekt-Formel muss von der Form \"resp ~ pred\" sein"

#. R/gls.R: gettextf("object must inherit from class %s", "\"gls\"")
#. R/lme.R: gettextf("object must inherit from class %s", "\"lme\"")
#. R/newFunc.R: gettextf("object must inherit from class %s", "\"data.frame\"")
#. R/newFunc.R: gettextf("object must inherit from class %s", "\"data.frame\"")
#. R/newFunc.R: gettextf("object must inherit from class %s", "\"lmList\"")
#: R/gls.R:0 R/lme.R:0 R/newFunc.R:0
msgid "object must inherit from class %s"
msgstr "Objekt muss von der Klasse %s erben"

#. R/lme.R: stop("objects must have a \"call\" component or attribute")
#: R/lme.R:0
msgid "objects must have a \"call\" component or attribute"
msgstr "Objekte müssen eine \"call\"-Komponente oder -Attribut haben."

#. R/newFunc.R: stop("objects must have coefficients with same row names")
#: R/newFunc.R:0
msgid "objects must have coefficients with same row names"
msgstr "Objekte müssen Koeffizienten mit gleichen Zeilennamen haben."

#. R/lme.R: gettextf("objects must inherit from classes %s, or %s", paste(head(valid.cl,     -1), collapse = ", "), tail(valid.cl, 1))
#: R/lme.R:0
msgid "objects must inherit from classes %s, or %s"
msgstr "Objekte müssen von den Klassen %s oder %s erben"

#. R/gls.R: stop("offset() terms are not supported")
#. R/lme.R: stop("offset() terms are not supported")
#: R/gls.R:0 R/lme.R:0
msgid "offset() terms are not supported"
msgstr ""

#. R/nlsList.R: stop("old-style self-starting model functions\nare no longer supported.\nNew selfStart functions are available.\nUse\n  SSfpl instead of fpl,\n  SSfol instead of first.order.log,\n  SSbiexp instead of biexp,\n  SSlogis instead of logistic.\nIf writing your own selfStart model, see\n  \"help(selfStart)\"\nfor the new form of the \"initial\" attribute.")
#: R/nlsList.R:0
msgid ""
"old-style self-starting model functions\n"
"are no longer supported.\n"
"New selfStart functions are available.\n"
"Use\n"
"  SSfpl instead of fpl,\n"
"  SSfol instead of first.order.log,\n"
"  SSbiexp instead of biexp,\n"
"  SSlogis instead of logistic.\n"
"If writing your own selfStart model, see\n"
"  \"help(selfStart)\"\n"
"for the new form of the \"initial\" attribute."
msgstr ""
"Selbst-startende Model Funktionen im alten Stil\n"
"werden nicht mehr unterstützt.\n"
"Neue selbst-startende Funktionen sind verfügbar.\n"
"Nutzen Sie\n"
"  SSfpl statt fpl,\n"
"  SSfol statt first.order.lag,\n"
"  SSbiexp statt biexp,\n"
"  SSlogis statt logistic.\n"
"Um eigene selbst-startende Modelle zu implementieren,\n"
"sehen Sie unter \"help(selfStart)\" die neue Form\n"
"der \"initial\" Attribute nach."

#. R/groupedData.R: stop("only one display level allowed")
#: R/groupedData.R:0
msgid "only one display level allowed"
msgstr "nur eine Anzeigestufe erlaubt"

#. R/gls.R: stop("only one level allowed for predictions")
#: R/gls.R:0
msgid "only one level allowed for predictions"
msgstr "nur eine Stufe für Vorhersagen erlaubt"

#. R/newFunc.R: stop("only one level allowed in 'gapply'")
#: R/newFunc.R:0
msgid "only one level allowed in 'gapply'"
msgstr "nur eine Stufe in 'gapply' erlaubt"

#. R/newFunc.R: stop("only one level allowed in 'gsummary'")
#: R/newFunc.R:0
msgid "only one level allowed in 'gsummary'"
msgstr "nur eine Stufe in 'gsummary' erlaubt"

#. R/groupedData.R: stop("only one level of grouping allowed")
#: R/groupedData.R:0
msgid "only one level of grouping allowed"
msgstr "nur eine Stufe der Gruppierung erlaubt"

#. R/newMethods.R: stop("only residuals allowed")
#: R/newMethods.R:0
msgid "only residuals allowed"
msgstr "nur Residuen erlaubt"

#. R/lmList.R: stop("only residuals and random effects allowed")
#. R/lme.R: stop("only residuals and random effects allowed")
#: R/lmList.R:0 R/lme.R:0
msgid "only residuals and random effects allowed"
msgstr "nur Residuen und zufällige Effekte erlaubt"

#. R/lme.R: stop("only single effects allowed in left side of 'form'")
#: R/lme.R:0
msgid "only single effects allowed in left side of 'form'"
msgstr "nur einzelne Effekte auf der linken Seite von 'form' erlaubt"

#. R/lme.R: stop("only single level allowed")
#. R/lme.R: stop("only single level allowed")
#: R/lme.R:0
msgid "only single level allowed"
msgstr "nur einzelne Stufe erlaubt"

#. R/simulate.R: stop("order of arguments in 'simulate.lme' has changed to conform with generic in R-2.2.0",     domain = "R-nlme")
#: R/simulate.R:0
msgid "order of arguments in 'simulate.lme' has changed to conform with generic in R-2.2.0"
msgstr ""

#. R/corStruct.R: stop("parameter in \"corCompSymm\" structure must be < 1 in absolute value")
#: R/corStruct.R:0
msgid "parameter in \"corCompSymm\" structure must be < 1 in absolute value"
msgstr "Parameter in \"corCompSymm\"-Struktur muss vom Betrag < 1 sein."

#. R/corStruct.R: stop("parameter in AR(1) structure must be between -1 and 1")
#: R/corStruct.R:0
msgid "parameter in AR(1) structure must be between -1 and 1"
msgstr "Parameter in AR(1)-Struktur muss zwischen -1 und 1 liegen"

#. R/corStruct.R: stop("parameter in CAR(1) structure must be between 0 and 1")
#: R/corStruct.R:0
msgid "parameter in CAR(1) structure must be between 0 and 1"
msgstr "Parameter in CAR(1)-Struktur muss zwischen 0 und 1 liegen."

#. R/corStruct.R: stop("parameters in ARMA structure must be < 1 in absolute value")
#: R/corStruct.R:0
msgid "parameters in ARMA structure must be < 1 in absolute value"
msgstr "Parameter in ARMA-Struktur müssen vom Betrag < 1 sein."

#. R/simulate.R: stop("plot method only implemented for comparing models")
#. R/simulate.R: stop("plot method only implemented for comparing models")
#: R/simulate.R:0
msgid "plot method only implemented for comparing models"
msgstr "Plotmehtode nur für Modellvergleiche implementiert"

#. R/corStruct.R: stop("range must be > 0 in \"corSpher\" initial value")
#: R/corStruct.R:0
msgid "range must be > 0 in \"corSpher\" initial value"
msgstr "Spannweite im \"corSpher\"-Anfangswert muss > 0 sein."

#. R/groupedData.R: stop("right-hand side of first argument must be a conditional expression")
#. R/groupedData.R: stop("right-hand side of first argument must be a conditional expression")
#. R/groupedData.R: stop("right-hand side of first argument must be a conditional expression")
#: R/groupedData.R:0
msgid "right-hand side of first argument must be a conditional expression"
msgstr "rechte Seite des ersten Arguments muss ein bedingter Ausdruck sein"

#. R/nlsList.R: stop("second argument must be a groupedData object")
#: R/nlsList.R:0
msgid "second argument must be a groupedData object"
msgstr "zweites Argument muss ein groupedData-Objekt sein"

#. R/groupedData.R: stop("second argument to 'groupedData' must inherit from data.frame")
#. R/groupedData.R: stop("second argument to 'groupedData' must inherit from data.frame")
#: R/groupedData.R:0
msgid "second argument to 'groupedData' must inherit from data.frame"
msgstr "zweites Argument für 'groupedData' muss von data.frame erben"

#. R/groupedData.R: stop("single group not supported -- use groupedData()")
#: R/groupedData.R:0
msgid "single group not supported -- use groupedData()"
msgstr "einzelne Gruppe nicht unterstützt -- nutze groupedData()"

#. R/lme.R: warning("some fitted objects deleted because response differs from the first model")
#: R/lme.R:0
msgid "some fitted objects deleted because response differs from the first model"
msgstr "einige gefittete Objekte gelöscht, da Antwort vom ersten Modell abweicht"

#. R/gnls.R: stop("starting estimates must have names when 'params' is missing")
#: R/gnls.R:0
msgid "starting estimates must have names when 'params' is missing"
msgstr "Startschätzung muss Namen haben, wenn 'params' fehlt"

#. R/nlme.R: stop("starting values for random effects must include group levels")
#: R/nlme.R:0
msgid "starting values for random effects must include group levels"
msgstr "Startwerte für Zufallseffekte müssen Gruppenstufen enthalten."

#. R/nlme.R: stop("starting values for random effects should be a list, or a matrix")
#: R/nlme.R:0
msgid "starting values for random effects should be a list, or a matrix"
msgstr "Startwerte für Zufallseffekte sollten eine Liste oder eine Matrix sein."

#. R/nlme.R: stop("starting values for the 'fixed' component are not the correct length")
#: R/nlme.R:0
msgid "starting values for the 'fixed' component are not the correct length"
msgstr "Startwerte für die Komponente 'fixed' haben nicht die richtige Länge."

#. R/nlme.R: stop("starting values for the random components should be a list of matrices")
#: R/nlme.R:0
msgid "starting values for the random components should be a list of matrices"
msgstr "Startwerte für Zufallskomponenten sollten eine Liste von Matrizen sein."

#. R/gnls.R: gettext("step halving factor reduced below minimum in NLS step")
#: R/gnls.R:0
msgid "step halving factor reduced below minimum in NLS step"
msgstr "Schrittlängen-Halbierungsfaktor reduziert unter Minimum im NLS-Schritt"

#. R/nlme.R: gettext("step halving factor reduced below minimum in PNLS step")
#: R/nlme.R:0
msgid "step halving factor reduced below minimum in PNLS step"
msgstr "Schrittlängenhalbierungsfaktor unter das Minimum in PNLS-Schritt vermindert"

#. R/gls.R: stop("terms can only be integers or characters")
#. R/lme.R: stop("terms can only be integers or characters")
#: R/gls.R:0 R/lme.R:0
msgid "terms can only be integers or characters"
msgstr "Terme können nur Ganzzahlen oder Zeichen sein"

#. R/lme.R: stop("terms must all have the same denominator DF")
#: R/lme.R:0
msgid "terms must all have the same denominator DF"
msgstr "Terme müssen alle den gleichen Freiheitsgrad im Nenner haben"

#. R/groupedData.R: gettextf("undefined collapsing level %s for %s", collapseLevel,     sQuote(substitute(object)))
#: R/groupedData.R:0
msgid "undefined collapsing level %s for %s"
msgstr "Collapsing-Stufe %s für %s nicht definiert"

#. R/groupedData.R: gettextf("undefined display level %s for %s", displayLevel, sQuote(substitute(object)))
#: R/groupedData.R:0
msgid "undefined display level %s for %s"
msgstr "undefinierte Anzeigestufe %s für %s"

#. R/groupedData.R: stop("undefined group declared in 'subset'")
#: R/groupedData.R:0
msgid "undefined group declared in 'subset'"
msgstr "undefinierte Gruppe in 'subset' deklariert"

#. R/corStruct.R: stop("unique values of the covariate  for \"corSymm\" objects must be a sequence of consecutive integers")
#: R/corStruct.R:0
msgid "unique values of the covariate  for \"corSymm\" objects must be a sequence of consecutive integers"
msgstr ""
"Eindeutige Werte der Kovariate für \"corSymm\"-Objekte müssen eine\n"
"Sequenz von aufeinander folgenden ganzen Zahlen sein."

#. R/corStruct.R: stop("unique values of the covariate for \"corNatural\" objects must be a sequence of consecutive integers")
#: R/corStruct.R:0
msgid "unique values of the covariate for \"corNatural\" objects must be a sequence of consecutive integers"
msgstr ""
"Eindeutige Werte der Kovariate für \"corNatural\"-Objekte müssen eine\n"
"Sequenz von aufeinanderfolgenden ganzen Zahlen sein"

#. R/gls.R: stop("wrong group levels")
#. R/gls.R: stop("wrong group levels")
#: R/gls.R:0
msgid "wrong group levels"
msgstr "falsche Gruppenstufen"

#. R/pdMat.R: stop("x-y data to splom got botched somehow")
#: R/pdMat.R:0
msgid "x-y data to splom got botched somehow"
msgstr "x-y-Daten an splom wurden irgendwie verpfuscht."

#. R/lme.R: ngettext(sum(whichNA), "%s not available for plotting", "%s not available for plotting",     domain = "R-nlme")
#. R/lme.R: ngettext(sum(whichNA), "%s not available for plotting", "%s not available for plotting",     domain = "R-nlme")
#: R/lme.R:0
msgid "%s not available for plotting"
msgid_plural "%s not available for plotting"
msgstr[0] "%s nicht verfügbar für grafische Darstellung"
msgstr[1] "%s nicht verfügbar für grafische Darstellung"

#. R/lmList.R: ngettext(sum(naV), "%s not found in data", "%s not found in data")
#. R/lmList.R: ngettext(sum(naV), "%s not found in data", "%s not found in data")
#. R/lmList.R: ngettext(sum(naV), "%s not found in data", "%s not found in data")
#. R/lme.R: ngettext(sum(naV), "%s not found in data", "%s not found in data")
#. R/lme.R: ngettext(sum(naV), "%s not found in data", "%s not found in data")
#. R/newMethods.R: ngettext(sum(naV), "%s not found in data", "%s not found in data")
#. R/newMethods.R: ngettext(sum(naV), "%s not found in data", "%s not found in data")
#: R/lmList.R:0 R/lme.R:0 R/newMethods.R:0
msgid "%s not found in data"
msgid_plural "%s not found in data"
msgstr[0] "%s nicht in Daten gefunden"
msgstr[1] "%s nicht in Daten gefunden"

#. R/newFunc.R: ngettext(sum(wchNot), "%s not matched", "%s not matched", domain = "R-nlme")
#: R/newFunc.R:0
msgid "%s not matched"
msgid_plural "%s not matched"
msgstr[0] "%s nicht übereinstimmend"
msgstr[1] "%s nicht übereinstimmend"

#. R/gls.R: ngettext(ncol(L), "'L' must have at most %d column", "'L' must have at most %d columns")
#. R/lme.R: ngettext(nX, "'L' must have at most %d column", "'L' must have at most %d columns")
#: R/gls.R:0 R/lme.R:0
msgid "'L' must have at most %d column"
msgid_plural "'L' must have at most %d columns"
msgstr[0] "'L' muss zumindest %d Spalte haben:"
msgstr[1] "'L' muss zumindest %d Spalten haben:"

#. R/gls.R: ngettext(sum(noMatch), "effect %s not matched", "effects %s not matched",     domain = "R-nlme")
#. R/lme.R: ngettext(sum(noMatch), "effect %s not matched", "effects %s not matched",     domain = "R-nlme")
#: R/gls.R:0 R/lme.R:0
msgid "effect %s not matched"
msgid_plural "effects %s not matched"
msgstr[0] "Effekt %s nicht übereinstimmend"
msgstr[1] "Effekte %s nicht übereinstimmend"

#. R/nlme.R: ngettext(sum(noMatch), "group name not matched in starting values for random effects: %s",     "group names not matched in starting values for random effects: %s",     domain = "R-nlme")
#: R/nlme.R:0
msgid "group name not matched in starting values for random effects: %s"
msgid_plural "group names not matched in starting values for random effects: %s"
msgstr[0] "Gruppenname nicht zu Startwerten für Zufallseffekte passend: %s"
msgstr[1] "Gruppennamen nicht zu Startwerten für Zufallseffekte passend: %s"

#. R/lme.R: ngettext(sum(aux), "nonexistent level %s", "nonexistent levels %s")
#. R/lme.R: ngettext(sum(aux), "nonexistent level %s", "nonexistent levels %s")
#: R/lme.R:0
msgid "nonexistent level %s"
msgid_plural "nonexistent levels %s"
msgstr[0] "nicht existierende Stufe %s"
msgstr[1] "nicht existierende Stufen %s"

#. R/gnls.R: ngettext(length(start), "supplied %d starting value, need %d",     "supplied %d starting values, need %d")
#: R/gnls.R:0
msgid "supplied %d starting value, need %d"
msgid_plural "supplied %d starting values, need %d"
msgstr[0] ""
msgstr[1] ""

#. R/gls.R: ngettext(sum(noMatch), "term %s not matched", "terms %s not matched",     domain = "R-nlme")
#. R/lme.R: ngettext(sum(noMatch), "term %s not matched", "terms %s not matched",     domain = "R-nlme")
#: R/gls.R:0 R/lme.R:0
msgid "term %s not matched"
msgid_plural "terms %s not matched"
msgstr[0] "Term %s nicht übereinstimmend"
msgstr[1] "Terme %s nicht übereinstimmend"

#~ msgid "approximate covariance matrix for parameter estimates not of full rank"
#~ msgstr "Approximiert Kovarianzmatrix für Parameterschätzungen haben keinen vollständigen Rang."
