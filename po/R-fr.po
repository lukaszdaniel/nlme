# Translation of R-nlme.pot to French
# Copyright (C) 2005 The R Foundation
# This file is distributed under the same license as the nlme R package.
# Philippe Grosjean <phgrosjean@sciviews.org> 2005.
#
msgid ""
msgstr ""
"Project-Id-Version: nlme 3.1-65\n"
"Report-Msgid-Bugs-To: bugs@r-project.org\n"
"POT-Creation-Date: 2024-09-13 20:06\n"
"PO-Revision-Date: 2014-03-30 08:37+0100\n"
"Last-Translator: Philippe Grosjean <phgrosjean@sciviews.org>\n"
"Language-Team: French <R-core@r-project.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=ISO-8859-1\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Generator: Poedit 1.6.4\n"

#. R/corStruct.R: gettextf("\"corARMA\" order (%g, %g) exceeds maximum lag in data (%g)",     p, q, maxLag)
#: R/corStruct.R:0
msgid "\"corARMA\" order (%g, %g) exceeds maximum lag in data (%g)"
msgstr ""

#. R/corStruct.R: stop("\"corStruct\" object must have a \"fixed\" attribute")
#: R/corStruct.R:0
msgid "\"corStruct\" object must have a \"fixed\" attribute"
msgstr "l'objet \"corStruct\" doit avoir un attribut \"fixed\""

#. R/reStruct.R: stop("\"pdMat\" element must have a formula")
#: R/reStruct.R:0
msgid "\"pdMat\" element must have a formula"
msgstr "l'élément \"pdMat\" doit contenir une formule"

#. R/reStruct.R: stop("\"pdMat\" elements must have a formula")
#: R/reStruct.R:0
msgid "\"pdMat\" elements must have a formula"
msgstr "les éléments de \"pdMat\" doivent contenir des formules"

#. R/gls.R: gettextf("%s and %s must have the same group levels", c1, c2)
#: R/gls.R:0
msgid "%s and %s must have the same group levels"
msgstr "%s et %s doivent avoir les mêmes niveaux de groupes"

#. R/varFunc.R: gettextf("%s can have at most two components", nam)
#. R/varFunc.R: gettextf("%s can have at most two components", nam)
#: R/varFunc.R:0
msgid "%s can have at most two components"
msgstr "%s peut avoir jusqu'à deux composantes"

#. R/varFunc.R: gettextf("%s can only be a list or numeric", nam)
#. R/varFunc.R: gettextf("%s can only be a list or numeric", nam)
#: R/varFunc.R:0
msgid "%s can only be a list or numeric"
msgstr "%s ne peut qu'être une liste, ou un nombre"

#. R/varFunc.R: gettextf("%s can only have names \"const\" and \"power\"", nam)
#: R/varFunc.R:0
msgid "%s can only have names \"const\" and \"power\""
msgstr "%s ne peut avoir que les noms \"const\" et \"power\""

#. R/varFunc.R: gettextf("%s can only have names \"const\" and \"prop\"", nam)
#: R/varFunc.R:0
msgid "%s can only have names \"const\" and \"prop\""
msgstr "%s ne peut avoir que les noms \"const\" et \"prop\""

#. R/lme.R: gettextf("%s is not a valid effect name", sQuote(reName))
#: R/lme.R:0
msgid "%s is not a valid effect name"
msgstr "%s n'est pas un nom valide pour un effet"

#. R/pdMat.R: gettextf("%s is not a valid object for \"pdMat\"", sQuote(deparse(object)))
#: R/pdMat.R:0
msgid "%s is not a valid object for \"pdMat\""
msgstr "%s n'est pas un objet correct pour \"pdMat\""

#. R/varFunc.R: gettextf("%s must have group names in 'varConstPower'", nam)
#: R/varFunc.R:0
msgid "%s must have group names in 'varConstPower'"
msgstr "%s doit avoir des noms de groupes dans 'varConstPower'"

#. R/varFunc.R: gettextf("%s must have group names in 'varConstProp'", nam)
#: R/varFunc.R:0
msgid "%s must have group names in 'varConstProp'"
msgstr "%s doit avoir des noms de groupes dans 'varConstProp'"

#. R/lme.R: gettextf("%s problem, convergence error code = %s\n  message = %s",     controlvals$opt, optRes$convergence, paste(optRes$message,         collapse = ""), domain = "R-nlme")
#: R/lme.R:0
msgid ""
"%s problem, convergence error code = %s\n"
"  message = %s"
msgstr ""
"problème %s, code d'erreur de convergence = %s\n"
" message = %s"

#. R/gls.R: gettextf("%s without \"primary\" can only be used with fits of \"groupedData\" objects",     sys.call()[[1L]])
#. R/lmList.R: gettextf("%s without \"primary\" can only be used with fits of \"groupedData\" objects",     sys.call()[[1]])
#. R/lme.R: gettextf("%s without \"primary\" can only be used with fits of \"groupedData\" objects",     sys.call()[[1L]])
#: R/gls.R:0 R/lmList.R:0 R/lme.R:0
msgid "%s without \"primary\" can only be used with fits of \"groupedData\" objects"
msgstr "%s sans \"primary\" ne peut être utilisé avec des ajustement d'objets \"groupedData\""

#. R/newFunc.R: stop("'FUN' can only be a function or a list of functions")
#: R/newFunc.R:0
msgid "'FUN' can only be a function or a list of functions"
msgstr "'FUN' ne peut qu'être une fonction ou une liste de fonctions"

#. R/lme.R: stop("'Id' must be between 0 and 1")
#: R/lme.R:0
msgid "'Id' must be between 0 and 1"
msgstr "'id' doit être compris entre 0 et 1"

#. R/gls.R: gettextf("'Terms' must be between 1 and %d", nTerms)
#. R/lme.R: gettextf("'Terms' must be between 1 and %d", nTerms)
#: R/gls.R:0 R/lme.R:0
msgid "'Terms' must be between 1 and %d"
msgstr "'Terms' doivent être compris entre 1 et %d"

#. R/groupedData.R: stop("'asTable' can only be used with balanced 'groupedData' objects")
#: R/groupedData.R:0
msgid "'asTable' can only be used with balanced 'groupedData' objects"
msgstr "'asTable' ne peut être utilisé qu'avec des objets 'groupedData' balancés"

#. R/groupedData.R: stop("'asTable' cannot be used with multilevel grouped data")
#: R/groupedData.R:0
msgid "'asTable' cannot be used with multilevel grouped data"
msgstr "'asTable' ne peut être utilisé avec des données à groupements multiniveaux"

#. R/lmList.R: message("'data' argument not used, but taken from groupedData object")
#: R/lmList.R:0
#, fuzzy
msgid "'data' argument not used, but taken from groupedData object"
msgstr "le second argument doit être un objet 'groupedData'"

#. R/lmList.R: gettextf("'data' in %s call must evaluate to a data frame", sQuote(substitute(object)))
#: R/lmList.R:0
msgid "'data' in %s call must evaluate to a data frame"
msgstr "'data dans l'appel %s doit être évalué comme un data.frame"

#. R/nlsList.R: stop("'data' must be a \"groupedData\" object if 'formula' does not include groups")
#: R/nlsList.R:0
msgid "'data' must be a \"groupedData\" object if 'formula' does not include groups"
msgstr "'data' doit être dans un objet \"groupedData\" si 'formula' n'inclus pas de groupes"

#. R/lmList.R: stop("'data' must be a \"groupedData\" object if 'groups' argument is missing")
#: R/lmList.R:0
msgid "'data' must be a \"groupedData\" object if 'groups' argument is missing"
msgstr "'data' doit être un objet \"groupedData\" si l'argument 'groups' est manquant"

#. R/gnls.R: stop("'data' must be given explicitly to use 'nls' to get initial estimates")
#: R/gnls.R:0
msgid "'data' must be given explicitly to use 'nls' to get initial estimates"
msgstr "'data' doit être fourni de manière explicite pour utiliser 'nls' afin d'obtenir les estimateurs initiaux"

#. R/nlme.R: stop("'data' must be given explicitly to use 'nlsList'")
#: R/nlme.R:0
msgid "'data' must be given explicitly to use 'nlsList'"
msgstr "'data' doit être fourni explicitement pour utiliser 'nlsList'"

#. R/simulate.R: stop("'data' must inherit from \"groupedData\" class if 'random' does not define groups")
#: R/simulate.R:0
msgid "'data' must inherit from \"groupedData\" class if 'random' does not define groups"
msgstr "'data' doit hériter de la classe \"groupedData\" si 'random' ne définit pas les groupes"

#. R/newMethods.R: stop("'distance' and 'object' have incompatible lengths")
#: R/newMethods.R:0
msgid "'distance' and 'object' have incompatible lengths"
msgstr "'distance' et 'object' ont des tailles incompatibles"

#. R/nlme.R: stop("'fixed' must be a formula or list of formulae")
#: R/nlme.R:0
msgid "'fixed' must be a formula or list of formulae"
msgstr "'fixed' doit être une formule ou une liste de formules"

#. R/pdMat.R: stop("'form' and 'nam' have incompatible lengths")
#: R/pdMat.R:0
msgid "'form' and 'nam' have incompatible lengths"
msgstr "'form' et 'nam' ont des tailles incompatibles"

#. R/pdMat.R: stop("'form' and 'pdClass' have incompatible lengths")
#: R/pdMat.R:0
msgid "'form' and 'pdClass' have incompatible lengths"
msgstr "'form' et 'pdClass' ont des longueurs incompatibles"

#. R/newMethods.R: stop("'form' argument must be a formula")
#: R/newMethods.R:0
msgid "'form' argument must be a formula"
msgstr "l'argument 'form' doit être une formule"

#. R/pdMat.R: stop("'form' can only be a formula or a list of formulae")
#: R/pdMat.R:0
msgid "'form' can only be a formula or a list of formulae"
msgstr "'form' ne peut qu'être une formule ou une liste de formules"

#. R/newMethods.R: stop("'form' can only be a formula, or a list of formulas")
#: R/newMethods.R:0
msgid "'form' can only be a formula, or a list of formulas"
msgstr "'form' ne peut être qu'une formule, ou une liste de formules"

#. R/lmList.R: stop("'form' must be a formula")
#. R/lmList.R: stop("'form' must be a formula")
#. R/lmList.R: stop("'form' must be a formula")
#. R/lme.R: stop("'form' must be a formula")
#. R/lme.R: stop("'form' must be a formula")
#. R/newFunc.R: stop("'form' must be a formula")
#. R/newFunc.R: stop("'form' must be a formula")
#. R/newMethods.R: stop("'form' must be a formula")
#. R/newMethods.R: stop("'form' must be a formula")
#. R/newMethods.R: stop("'form' must be a formula")
#: R/lmList.R:0 R/lme.R:0 R/newFunc.R:0 R/newMethods.R:0
msgid "'form' must be a formula"
msgstr "'form' doit être une formule"

#. R/lme.R: stop("'form' must be a formula when not NULL")
#: R/lme.R:0
msgid "'form' must be a formula when not NULL"
msgstr "'form' doit être une formule, lorsqu'il n'est pas NULL."

#. R/pdMat.R: stop("'form' must be a list")
#: R/pdMat.R:0
msgid "'form' must be a list"
msgstr "'form' doit être une liste"

#. R/lmList.R: stop("'form' must be a one-sided formula")
#. R/lme.R: stop("'form' must be a one-sided formula")
#: R/lmList.R:0 R/lme.R:0
msgid "'form' must be a one-sided formula"
msgstr "'form' doit être une formule à un seul membre"

#. R/newFunc.R: stop("'form' must be a two-sided formula")
#. R/newMethods.R: stop("'form' must be a two-sided formula")
#: R/newFunc.R:0 R/newMethods.R:0
msgid "'form' must be a two-sided formula"
msgstr "'formf doit être une formule à deux membres"

#. R/varFunc.R: stop("'form' must have a covariate")
#. R/varFunc.R: stop("'form' must have a covariate")
#. R/varFunc.R: stop("'form' must have a covariate")
#. R/varFunc.R: stop("'form' must have a covariate")
#. R/varFunc.R: stop("'form' must have a covariate")
#: R/varFunc.R:0
msgid "'form' must have a covariate"
msgstr "'form' doit avoir une covariable"

#. R/newMethods.R: stop("'form' must have all components as formulas")
#: R/newMethods.R:0
msgid "'form' must have all components as formulas"
msgstr "'form' doit avoir tous ses composantes sous forme de formules"

#. R/pdMat.R: stop("'form' not consistent with 'nam'")
#: R/pdMat.R:0
msgid "'form' not consistent with 'nam'"
msgstr "'form' non conforme avec 'nam'"

#. R/lmList.R: stop("'id' can only be a formula or numeric")
#. R/lmList.R: stop("'id' can only be a formula or numeric")
#. R/lmList.R: stop("'id' can only be a formula or numeric")
#. R/lmList.R: stop("'id' can only be a formula or numeric")
#. R/lme.R: stop("'id' can only be a formula or numeric")
#. R/lme.R: stop("'id' can only be a formula or numeric")
#. R/lme.R: stop("'id' can only be a formula or numeric")
#. R/newMethods.R: stop("'id' can only be a formula or numeric")
#. R/newMethods.R: stop("'id' can only be a formula or numeric")
#: R/lmList.R:0 R/lme.R:0 R/newMethods.R:0
msgid "'id' can only be a formula or numeric"
msgstr "'id' doit être une formule ou une valeur numérique"

#. R/lmList.R: stop("'id' must be between 0 and 1")
#. R/lmList.R: stop("'id' must be between 0 and 1")
#. R/lmList.R: stop("'id' must be between 0 and 1")
#. R/lmList.R: stop("'id' must be between 0 and 1")
#. R/lme.R: stop("'id' must be between 0 and 1")
#. R/lme.R: stop("'id' must be between 0 and 1")
#. R/newMethods.R: stop("'id' must be between 0 and 1")
#. R/newMethods.R: stop("'id' must be between 0 and 1")
#: R/lmList.R:0 R/lme.R:0 R/newMethods.R:0
msgid "'id' must be between 0 and 1"
msgstr "'id' doit être compris entre 0 et 1"

#. R/lmList.R: stop("'idLabels' can only be a formula or a vector")
#. R/lmList.R: stop("'idLabels' can only be a formula or a vector")
#. R/lmList.R: stop("'idLabels' can only be a formula or a vector")
#. R/lmList.R: stop("'idLabels' can only be a formula or a vector")
#. R/lme.R: stop("'idLabels' can only be a formula or a vector")
#. R/lme.R: stop("'idLabels' can only be a formula or a vector")
#. R/lme.R: stop("'idLabels' can only be a formula or a vector")
#. R/newMethods.R: stop("'idLabels' can only be a formula or a vector")
#. R/newMethods.R: stop("'idLabels' can only be a formula or a vector")
#: R/lmList.R:0 R/lme.R:0 R/newMethods.R:0
msgid "'idLabels' can only be a formula or a vector"
msgstr "'idLabels' ne peut être qu'une formule ou un vecteur"

#. R/lmList.R: stop("'idLabels' of incorrect length")
#. R/lmList.R: stop("'idLabels' of incorrect length")
#. R/lmList.R: stop("'idLabels' of incorrect length")
#. R/lmList.R: stop("'idLabels' of incorrect length")
#. R/lme.R: stop("'idLabels' of incorrect length")
#. R/lme.R: stop("'idLabels' of incorrect length")
#. R/lme.R: stop("'idLabels' of incorrect length")
#. R/newMethods.R: stop("'idLabels' of incorrect length")
#. R/newMethods.R: stop("'idLabels' of incorrect length")
#: R/lmList.R:0 R/lme.R:0 R/newMethods.R:0
msgid "'idLabels' of incorrect length"
msgstr "'idLabels' de longueur incorrecte"

#. R/lme.R: warning("'lme.lmList' will redefine 'data'")
#: R/lme.R:0
msgid "'lme.lmList' will redefine 'data'"
msgstr "'lme.lmList' va redéfinir 'data'"

#. R/nlme.R: stop("'model' must be a formula")
#: R/nlme.R:0
msgid "'model' must be a formula"
msgstr "'model' doit être une formule"

#. R/pdMat.R: stop("'nam' and 'pdClass' have incompatible lengths")
#: R/pdMat.R:0
msgid "'nam' and 'pdClass' have incompatible lengths"
msgstr "'nam' et 'pdClass' ont des longueurs incompatibles"

#. R/pdMat.R: stop("'nam' must be a list")
#: R/pdMat.R:0
msgid "'nam' must be a list"
msgstr "'nam' doit être une liste"

#. R/gls.R: stop("'nint' is not consistent with 'breaks'")
#. R/lme.R: stop("'nint' is not consistent with 'breaks'")
#: R/gls.R:0 R/lme.R:0
msgid "'nint' is not consistent with 'breaks'"
msgstr "'nint' n'est pas consistant avec 'breaks'"

#. R/nlme.R: warning("'nlme.nlsList' will redefine 'fixed', 'data', and 'start'")
#: R/nlme.R:0
msgid "'nlme.nlsList' will redefine 'fixed', 'data', and 'start'"
msgstr "'nlme.nlsList' va redéfinir 'fixed', 'data', et 'start'"

#. R/corStruct.R: stop("'object' has not been Initialize()d")
#. R/corStruct.R: stop("'object' has not been Initialize()d")
#. R/corStruct.R: stop("'object' has not been Initialize()d")
#. R/corStruct.R: stop("'object' has not been Initialize()d")
#: R/corStruct.R:0
msgid "'object' has not been Initialize()d"
msgstr "'object' n'a pas été initialisé ; utilisez Initialize()"

#. R/gnls.R: stop("'object' must be a formula")
#: R/gnls.R:0
msgid "'object' must be a formula"
msgstr "'object' doit être une formule"

#. R/reStruct.R: stop("'object' must be a list or a formula")
#: R/reStruct.R:0
msgid "'object' must be a list or a formula"
msgstr "'object' doit être une liste ou une formule"

#. R/pdMat.R: stop("'object' must be a list when not missing, not a matrix, and not numeric")
#: R/pdMat.R:0
msgid "'object' must be a list when not missing, not a matrix, and not numeric"
msgstr "'object' doit être une liste, lorsqu'il n'est pas manquant, pas une matrice ou un nombre"

#. R/gnls.R: stop("'params' must be a formula or list of formulae")
#: R/gnls.R:0
msgid "'params' must be a formula or list of formulae"
msgstr "'params' doit être une formule ou une liste de formules"

#. R/pdMat.R: stop("'pdClass' must be a character vector")
#: R/pdMat.R:0
msgid "'pdClass' must be a character vector"
msgstr "'pdClass' doit être un vecteur de chaînes de caractères"

#. R/groupedData.R: stop("'preserve' must be a two-sided formula")
#: R/groupedData.R:0
msgid "'preserve' must be a two-sided formula"
msgstr "'preserve' doit être une formule à deux membres"

#. R/nlme.R: stop("'random' must be a formula or list of formulae")
#: R/nlme.R:0
msgid "'random' must be a formula or list of formulae"
msgstr "'random' doit être une formule ou une liste de formules"

#. R/corStruct.R: stop("'range' must be > 0 in \"corLin\" initial value")
#: R/corStruct.R:0
msgid "'range' must be > 0 in \"corLin\" initial value"
msgstr "l'étendue ('range') doit être > 0 pour les valeurs initiales dans \"corLin\""

#. R/corStruct.R: stop("'range' must be > 0 in \"corSpatial\" initial value")
#: R/corStruct.R:0
msgid "'range' must be > 0 in \"corSpatial\" initial value"
msgstr "l'étendue des valeurs initiales ('range') dans \"corSpatial\" doit être > 0 "

#. R/nlme.R: stop("'start' must have a component called 'fixed'")
#: R/nlme.R:0
msgid "'start' must have a component called 'fixed'"
msgstr "'start' doit avoir une composante nommée 'fixed'"

#. R/lmList.R: stop("'subset' can only be character or integer")
#. R/lmList.R: stop("'subset' can only be character or integer")
#: R/lmList.R:0
msgid "'subset' can only be character or integer"
msgstr "'subset' ne peut qu'être une chaîne de caractères ou une valeur numérique"

#. R/groupedData.R: warning("'subset' ignored with single grouping factor")
#: R/groupedData.R:0
msgid "'subset' ignored with single grouping factor"
msgstr "'subset' ignoré lors de l'utilisation d'un seul facteur pour le regroupement"

#. R/groupedData.R: stop("'subset' must be a list")
#: R/groupedData.R:0
msgid "'subset' must be a list"
msgstr "'subset' doit être une liste"

#. R/corStruct.R: gettextf("'sumLenSq := sum(table(groups)^2)' = %g is too large.\n Too large or no groups in your correlation structure?",     suml2)
#: R/corStruct.R:0
msgid ""
"'sumLenSq := sum(table(groups)^2)' = %g is too large.\n"
" Too large or no groups in your correlation structure?"
msgstr ""

#. R/corStruct.R: gettextf("'sumLenSq' = %g is too large (larger than maximal integer)",     corD[["sumLenSq"]])
#: R/corStruct.R:0
msgid "'sumLenSq' = %g is too large (larger than maximal integer)"
msgstr ""

#. R/varFunc.R: stop("'value' must be a one sided formula")
#: R/varFunc.R:0
msgid "'value' must be a one sided formula"
msgstr "'value' doit être une formule à un seul membre"

#. R/pdMat.R: stop("'value' must be a square matrix")
#: R/pdMat.R:0
msgid "'value' must be a square matrix"
msgstr "'value' doit être une matrice carrée"

#. R/newFunc.R: stop("'which' can only be character or integer")
#: R/newFunc.R:0
msgid "'which' can only be character or integer"
msgstr "'which' ne peut être qu'une chaîne de caractères ou un entier"

#. R/newFunc.R: gettextf("'which' must be between 1 and %d", ncol(object))
#: R/newFunc.R:0
msgid "'which' must be between 1 and %d"
msgstr "'which' doit être compris entre 1 et %d"

#. R/zzMethods.R: stop("AIC undefined for REML fit")
#: R/zzMethods.R:0
msgid "AIC undefined for REML fit"
msgstr ""

#. R/nlme.R: if (convIter >= control$iter.max) "Do increase 'msMaxIter'!" else if (!is.null(msg <- optRes$message)) paste("PORT message:",     msg)
#. R/nlme.R: if (aNlm$code == 4) "Do increase 'msMaxIter'!"
#: R/nlme.R:0
msgid "Do increase 'msMaxIter'!"
msgstr ""

#. R/nlme.R: sprintf("Iteration %d, LME step: nlm() did not converge (code = %d).",     numIter, aNlm$code)
#: R/nlme.R:0
msgid "Iteration %d, LME step: nlm() did not converge (code = %d)."
msgstr ""

#. R/nlme.R: sprintf("Iteration %d, LME step: nlminb() did not converge (code = %d).",     numIter, optRes$convergence)
#: R/nlme.R:0
msgid "Iteration %d, LME step: nlminb() did not converge (code = %d)."
msgstr ""

#. R/lme.R: stop("L may only involve fixed effects with the same denominator DF")
#: R/lme.R:0
msgid "L may only involve fixed effects with the same denominator DF"
msgstr "'L' ne peut que prendre en compte des effets fixes ayant même degré de liberté au dénominateur"

#. R/pdMat.R: stop("LNone of the arguments specify more than one block")
#: R/pdMat.R:0
msgid "LNone of the arguments specify more than one block"
msgstr "Aucun des arguments ne spécifie plus d'un bloc"

#. R/pdMat.R: gettextf("Length of names should be %d", aux)
#. R/pdMat.R: gettextf("Length of names should be %d", length(dn))
#: R/pdMat.R:0
msgid "Length of names should be %d"
msgstr "La longueur des noms devrait être %d"

#. R/nlme.R: paste("PORT message:", msg)
#: R/nlme.R:0
msgid "PORT message:"
msgstr ""

#. R/gls.R: stop("Within-group std. dev. must be a positive numeric value")
#. R/gnls.R: stop("Within-group std. dev. must be a positive numeric value")
#. R/lme.R: stop("Within-group std. dev. must be a positive numeric value")
#. R/nlme.R: stop("Within-group std. dev. must be a positive numeric value")
#: R/gls.R:0 R/gnls.R:0 R/lme.R:0 R/nlme.R:0
msgid "Within-group std. dev. must be a positive numeric value"
msgstr ""

#. R/varFunc.R: stop("all arguments to 'varComb' must be of class \"varFunc\".")
#: R/varFunc.R:0
msgid "all arguments to 'varComb' must be of class \"varFunc\"."
msgstr "tous les arguments de 'varComb' doivent être de classe \"varFunc\"."

#. R/pdMat.R: stop("all elements in the argument must generate \"pdMat\" objects")
#: R/pdMat.R:0
msgid "all elements in the argument must generate \"pdMat\" objects"
msgstr "tous les éléments dans l'argument doivent générer des objets \"pdMat\""

#. R/pdMat.R: stop("all elements must have a non-zero size")
#: R/pdMat.R:0
msgid "all elements must have a non-zero size"
msgstr "tous les éléments doivent avoir une taille non nulle"

#. R/pdMat.R: stop("all elements must have formulas when any has a formula")
#: R/pdMat.R:0
msgid "all elements must have formulas when any has a formula"
msgstr "tous les éléments doivent contenir des formules, si au moins l'un d'eux en contient une"

#. R/pdMat.R: stop("all elements must have names when any has names")
#: R/pdMat.R:0
msgid "all elements must have names when any has names"
msgstr "tous les éléments doivent être nommés, lorsqu'au moins un l'est"

#. R/pdMat.R: stop("all elements of 'form' list must be two-sided formulas")
#: R/pdMat.R:0
msgid "all elements of 'form' list must be two-sided formulas"
msgstr "tous les éléments de la liste 'form' doivent être des formules à double membres"

#. R/reStruct.R: stop("all elements of a \"reStruct\" object must have a non-zero size")
#: R/reStruct.R:0
msgid "all elements of a \"reStruct\" object must have a non-zero size"
msgstr "tous les éléments d'un objet \"reStruct\" doivent avoir une taille non nulle"

#. R/pdMat.R: stop("all elements of formula must be list of two-sided formulae or two-sided formulae")
#: R/pdMat.R:0
msgid "all elements of formula must be list of two-sided formulae or two-sided formulae"
msgstr "tous les éléments de type formule doivent être des listes de formules à deux membres ou des formules à deux membres"

#. R/lme.R: stop("all fitted objects must have the same estimation method")
#: R/lme.R:0
msgid "all fitted objects must have the same estimation method"
msgstr "tous les objets ajustés doivent l'être à l'aide de la même méthode d'estimation"

#. R/lme.R: stop("all fitted objects must use the same number of observations")
#: R/lme.R:0
msgid "all fitted objects must use the same number of observations"
msgstr "tous les objets ajustés doivent utiliser le même nombre d'observations"

#. R/varFunc.R: stop("all variables used in 'formula' must be in 'data'")
#: R/varFunc.R:0
msgid "all variables used in 'formula' must be in 'data'"
msgstr "toutes les variables utilisées dans 'formula' doivent aussi se retrouver dans 'data'"

#. R/pdMat.R: gettextf("an object of length %d does not match a Cholesky factor",     length(val))
#: R/pdMat.R:0
msgid "an object of length %d does not match a Cholesky factor"
msgstr "un objet de longueur %d ne correspond pas à une factorisation de Cholesky"

#. R/pdMat.R: gettextf("an object of length %d does not match the required parameter size",     length(val))
#. R/pdMat.R: gettextf("an object of length %d does not match the required parameter size",     length(val))
#. R/pdMat.R: gettextf("an object of length %d does not match the required parameter size",     length(val))
#. R/pdMat.R: gettextf("an object of length %d does not match the required parameter size",     length(val))
#. R/pdMat.R: gettextf("an object of length %d does not match the required parameter size",     length(val))
#: R/pdMat.R:0
msgid "an object of length %d does not match the required parameter size"
msgstr "un objet de longeur %d ne correspond pas à la taille requise du paramètre"

#. R/pdMat.R: stop("arguments imply different number of blocks")
#: R/pdMat.R:0
msgid "arguments imply different number of blocks"
msgstr "les arguments impliquent des nombres différents de blocs"

#. R/corStruct.R: stop("at least one of 'p' and 'q' must be > 0")
#: R/corStruct.R:0
#, fuzzy
msgid "at least one of 'p' and 'q' must be > 0"
msgstr "les valeurs initiales pour 'varIdent' doivent être > 0"

#. R/newMethods.R: stop("at least two coefficients are needed")
#: R/newMethods.R:0
msgid "at least two coefficients are needed"
msgstr "il faut au moins deux coefficients"

#. R/lme.R: stop("augmentation of random effects only available for single level")
#: R/lme.R:0
msgid "augmentation of random effects only available for single level"
msgstr "l'augmentation des effets aléatoires n'est disponible que pour un seul niveau"

#. R/corStruct.R: stop("autoregressive order must be a non-negative integer")
#: R/corStruct.R:0
msgid "autoregressive order must be a non-negative integer"
msgstr "l'ordre autorégressif doit être un entier positif ou nul"

#. R/varFunc.R: stop("can only construct \"varFunc\" object from another \"varFunc\" object, a formula, or a character string")
#: R/varFunc.R:0
msgid "can only construct \"varFunc\" object from another \"varFunc\" object, a formula, or a character string"
msgstr "un objet \"varFunc\" ne peut être construit qu'à partir d'un autre objet \"varFunc\", une formula ou une chaîne de caractères"

#. R/lme.R: stop("can only fit \"lmList\" objects with single grouping variable")
#. R/lme.R: stop("can only fit \"lmList\" objects with single grouping variable")
#: R/lme.R:0
msgid "can only fit \"lmList\" objects with single grouping variable"
msgstr "seuls les objets \"lmList\" peuvent être ajustés avec une seule variable de groupe"

#. R/nlme.R: stop("can only fit \"nlsList\" objects with single grouping variable")
#: R/nlme.R:0
msgid "can only fit \"nlsList\" objects with single grouping variable"
msgstr "seuls les objets \"nlsList\" peuvent être ajustés avec une seule variable de groupe"

#. R/pdMat.R: stop("cannot access the matrix of object without names")
#. R/pdMat.R: stop("cannot access the matrix of object without names")
#: R/pdMat.R:0
msgid "cannot access the matrix of object without names"
msgstr "impossible d'accéder à la matrice d'un objet dont les noms ne sont pas définis"

#. R/pdMat.R: stop("cannot access the matrix of uninitialized objects")
#. R/pdMat.R: stop("cannot access the matrix of uninitialized objects")
#. R/pdMat.R: stop("cannot access the matrix of uninitialized objects")
#. R/pdMat.R: stop("cannot access the matrix of uninitialized objects")
#. R/reStruct.R: stop("cannot access the matrix of uninitialized objects")
#. R/reStruct.R: stop("cannot access the matrix of uninitialized objects")
#: R/pdMat.R:0 R/reStruct.R:0
msgid "cannot access the matrix of uninitialized objects"
msgstr "impossible d'accéder à la matrice d'objets non initialisés"

#. R/pdMat.R: stop("cannot access the number of columns of uninitialized objects without names")
#: R/pdMat.R:0
msgid "cannot access the number of columns of uninitialized objects without names"
msgstr "impossible de changer le nombre de colonnes d'un objet non initialisé et sans noms"

#. R/gnls.R: stop("cannot calculate REML log-likelihood for \"gnls\" objects")
#: R/gnls.R:0
msgid "cannot calculate REML log-likelihood for \"gnls\" objects"
msgstr "impossible de calculer la log-vraissemblance REML pour les objets \"gnls\""

#. R/corStruct.R: warning("cannot change 'form'")
#: R/corStruct.R:0
msgid "cannot change 'form'"
msgstr "Impossible de changer 'form'"

#. R/varFunc.R: stop("cannot change coefficients before initialization or when all parameters are fixed")
#. R/varFunc.R: stop("cannot change coefficients before initialization or when all parameters are fixed")
#. R/varFunc.R: stop("cannot change coefficients before initialization or when all parameters are fixed")
#. R/varFunc.R: stop("cannot change coefficients before initialization or when all parameters are fixed")
#: R/varFunc.R:0
msgid "cannot change coefficients before initialization or when all parameters are fixed"
msgstr "impossible de changer les coefficients avant initialisation ou lorsque tous les paramètres sont fixés"

#. R/pdMat.R: stop("cannot change dimensions on an initialized \"pdMat\" object")
#: R/pdMat.R:0
msgid "cannot change dimensions on an initialized \"pdMat\" object"
msgstr "impossible de changer les dimensions d'un objet \"pdMat\" initialisé"

#. R/pdMat.R: stop("cannot change parameter length of initialized \"pdMat\" object")
#: R/pdMat.R:0
msgid "cannot change parameter length of initialized \"pdMat\" object"
msgstr "impossible de changer la longueur des paramètres dans un objet \"pdMat\" initialisé"

#. R/varFunc.R: stop("cannot change parameter length of initialized \"varComb\" object")
#: R/varFunc.R:0
msgid "cannot change parameter length of initialized \"varComb\" object"
msgstr "impossible de modifier la longueur du paramètre pour des objets \"varComb\" initialisés"

#. R/reStruct.R: stop("cannot change parameter length of initialized objects")
#: R/reStruct.R:0
msgid "cannot change parameter length of initialized objects"
msgstr "la longueur du paramètre ne peut être modifiée dans les objets initialisés"

#. R/reStruct.R: stop("cannot change the length of 'object'")
#: R/reStruct.R:0
msgid "cannot change the length of 'object'"
msgstr "impossible de modifier la taille de 'object'"

#. R/varFunc.R: stop("cannot change the length of covariate in \"varFunc\" object")
#: R/varFunc.R:0
msgid "cannot change the length of covariate in \"varFunc\" object"
msgstr "impossible de changer la longueur de la covariable dans l'objet \"varFunc\""

#. R/varFunc.R: stop("cannot change the length of the \"varExp\" parameter after initialization")
#: R/varFunc.R:0
msgid "cannot change the length of the \"varExp\" parameter after initialization"
msgstr "impossible de changer la longueur du paramètre \"varExp\" après l'initialisation"

#. R/varFunc.R: stop("cannot change the length of the \"varIdent\" parameter after initialization")
#: R/varFunc.R:0
msgid "cannot change the length of the \"varIdent\" parameter after initialization"
msgstr "impossible de changer la longueur du paramètre \"varIdent\" après l'initialisation"

#. R/varFunc.R: stop("cannot change the length of the \"varStruct\" parameter after initialization")
#: R/varFunc.R:0
msgid "cannot change the length of the \"varStruct\" parameter after initialization"
msgstr "impossible de changer la longueur du paramètre \"varStruct\" après l'initialisation"

#. R/corStruct.R: stop("cannot change the length of the parameter after initialization")
#. R/pdMat.R: stop("cannot change the length of the parameter after initialization")
#. R/varFunc.R: stop("cannot change the length of the parameter after initialization")
#. R/varFunc.R: stop("cannot change the length of the parameter after initialization")
#: R/corStruct.R:0 R/pdMat.R:0 R/varFunc.R:0
msgid "cannot change the length of the parameter after initialization"
msgstr "impossible de changer la longueur du paramètre après l'initialisation"

#. R/corStruct.R: stop("cannot change the length of the parameter of a \"corAR1\" object")
#: R/corStruct.R:0
msgid "cannot change the length of the parameter of a \"corAR1\" object"
msgstr "Impossible de changer la longueur des paramètres d'un objet \"corAR1\""

#. R/corStruct.R: stop("cannot change the length of the parameter of a \"corARMA\" object")
#: R/corStruct.R:0
msgid "cannot change the length of the parameter of a \"corARMA\" object"
msgstr "impossible de changer la longueur des paramètres d'un objet \"corARMA\""

#. R/corStruct.R: stop("cannot change the length of the parameter of a \"corCAR1\" object")
#: R/corStruct.R:0
msgid "cannot change the length of the parameter of a \"corCAR1\" object"
msgstr "Impossible de changer la longueur des paramètres d'un objet \"corCAR1\""

#. R/corStruct.R: stop("cannot change the length of the parameter of a \"corCompSymm\" object")
#: R/corStruct.R:0
msgid "cannot change the length of the parameter of a \"corCompSymm\" object"
msgstr "impossible de changer la longueur des paramètres d'un objet \"corCompSymm\""

#. R/corStruct.R: stop("cannot change the length of the parameter of a \"corNatural\" object")
#: R/corStruct.R:0
msgid "cannot change the length of the parameter of a \"corNatural\" object"
msgstr "impossible de changer la longueur des paramètres d'un objet \"corNatural\""

#. R/corStruct.R: stop("cannot change the length of the parameter of a \"corStruct\" object")
#: R/corStruct.R:0
msgid "cannot change the length of the parameter of a \"corStruct\" object"
msgstr "impossible de changer la longueur des paramètres d'un objet \"corStruct\""

#. R/corStruct.R: stop("cannot change the length of the parameter of a \"corSymm\" object")
#: R/corStruct.R:0
msgid "cannot change the length of the parameter of a \"corSymm\" object"
msgstr "impossible de changer la longueur des paramètres d'un objet \"corSymm\""

#. R/pdMat.R: stop("cannot change the number of columns on an initialized object")
#: R/pdMat.R:0
msgid "cannot change the number of columns on an initialized object"
msgstr "impossible de changer le nombre de colonnes d'un objet initialisé"

#. R/pdMat.R: stop("cannot change the parameter when length of parameters is undefined")
#. R/reStruct.R: stop("cannot change the parameter when length of parameters is undefined")
#: R/pdMat.R:0 R/reStruct.R:0
msgid "cannot change the parameter when length of parameters is undefined"
msgstr "le paramètre ne peut être modifié lorsque la longueur des paramètres est indéfinie"

#. R/lmList.R: stop("cannot do pairs of just one variable")
#. R/lme.R: stop("cannot do pairs of just one variable")
#: R/lmList.R:0 R/lme.R:0
msgid "cannot do pairs of just one variable"
msgstr "impossible d'apparier avec seulement une variable"

#. R/lme.R: stop("cannot evaluate groups for desired levels on 'newdata'")
#. R/nlme.R: stop("cannot evaluate groups for desired levels on 'newdata'")
#: R/lme.R:0 R/nlme.R:0
msgid "cannot evaluate groups for desired levels on 'newdata'"
msgstr "impossible d'évaluer les groupes pour les niveaux désirés de 'newdata'"

#. R/reStruct.R: stop("cannot extract groups formula without a formula")
#: R/reStruct.R:0
msgid "cannot extract groups formula without a formula"
msgstr "impossible d'extraire les groupes sans une formule à disposition"

#. R/pdMat.R: stop("cannot extract matrix from an uninitialized object")
#. R/pdMat.R: stop("cannot extract matrix from an uninitialized object")
#: R/pdMat.R:0
msgid "cannot extract matrix from an uninitialized object"
msgstr "impossible d'extraire une matrice pour un objet non initialisé"

#. R/reStruct.R: stop("cannot extract model matrix without formula")
#: R/reStruct.R:0
msgid "cannot extract model matrix without formula"
msgstr "impossible d'extraire la matrice du modèle sans une formule à disposition"

#. R/varFunc.R: stop("cannot extract parameters of uninitialized object")
#: R/varFunc.R:0
msgid "cannot extract parameters of uninitialized object"
msgstr "impossible d'extraire les paramètres d'objets non initialisés"

#. R/pdMat.R: stop("cannot extract the dimensions")
#. R/pdMat.R: stop("cannot extract the dimensions")
#: R/pdMat.R:0
msgid "cannot extract the dimensions"
msgstr "impossible d'extraire les dimensions"

#. R/pdMat.R: stop("cannot extract the inverse from an uninitialized object")
#. R/pdMat.R: stop("cannot extract the inverse from an uninitialized object")
#. R/pdMat.R: stop("cannot extract the inverse from an uninitialized object")
#: R/pdMat.R:0
msgid "cannot extract the inverse from an uninitialized object"
msgstr "impossible d'extraire l'inverse d'un objet non initialisé"

#. R/pdMat.R: stop("cannot extract the log of the determinant from an uninitialized object")
#. R/pdMat.R: stop("cannot extract the log of the determinant from an uninitialized object")
#. R/pdMat.R: stop("cannot extract the log of the determinant from an uninitialized object")
#. R/pdMat.R: stop("cannot extract the log of the determinant from an uninitialized object")
#: R/pdMat.R:0
msgid "cannot extract the log of the determinant from an uninitialized object"
msgstr "impossible d'extraire le logarithme du déterminant d'un objet non initialisé"

#. R/pdMat.R: stop("cannot extract the matrix from an uninitialized \"pdCompSymm\" object")
#. R/pdMat.R: stop("cannot extract the matrix from an uninitialized \"pdCompSymm\" object")
#: R/pdMat.R:0
msgid "cannot extract the matrix from an uninitialized \"pdCompSymm\" object"
msgstr "impossible d'extraire la matrice d'un objet \"pdCompSymm\" non initialisé"

#. R/pdMat.R: stop("cannot extract the matrix from an uninitialized \"pdIdent\" object")
#. R/pdMat.R: stop("cannot extract the matrix from an uninitialized \"pdIdent\" object")
#: R/pdMat.R:0
msgid "cannot extract the matrix from an uninitialized \"pdIdent\" object"
msgstr "impossible d'extraire la matrice d'un objet \"pdIdent\" non initialisé"

#. R/pdMat.R: stop("cannot extract the matrix from an uninitialized object")
#: R/pdMat.R:0
msgid "cannot extract the matrix from an uninitialized object"
msgstr "impossible d'extraire la matrice d'un objet non initialisé"

#. R/pdMat.R: stop("cannot extract the matrix with uninitialized dimensions")
#. R/pdMat.R: stop("cannot extract the matrix with uninitialized dimensions")
#. R/pdMat.R: stop("cannot extract the matrix with uninitialized dimensions")
#. R/pdMat.R: stop("cannot extract the matrix with uninitialized dimensions")
#: R/pdMat.R:0
msgid "cannot extract the matrix with uninitialized dimensions"
msgstr "impossible d'extraire la matrice en utilisant des dimensions non initialisées"

#. R/varFunc.R: stop("cannot fix variances in all groups")
#: R/varFunc.R:0
msgid "cannot fix variances in all groups"
msgstr "impossible de fixer les variances de tous les groupes"

#. R/gls.R: gettextf("cannot get confidence intervals on var-cov components: %s",     aV)
#: R/gls.R:0
msgid "cannot get confidence intervals on var-cov components: %s"
msgstr "impossible de calculer un intervalle de confiance sur les composantes var-cov : %s"

#. R/lme.R: gettextf("cannot get confidence intervals on var-cov components: %s\n Consider '%s'",     aV, "which = \"fixed\"")
#: R/lme.R:0
#, fuzzy
msgid ""
"cannot get confidence intervals on var-cov components: %s\n"
" Consider '%s'"
msgstr "impossible de calculer un intervalle de confiance sur les composantes var-cov : %s"

#. R/pdMat.R: stop("cannot get the inverse of an uninitialized object")
#. R/pdMat.R: stop("cannot get the inverse of an uninitialized object")
#. R/pdMat.R: stop("cannot get the inverse of an uninitialized object")
#. R/pdMat.R: stop("cannot get the inverse of an uninitialized object")
#: R/pdMat.R:0
msgid "cannot get the inverse of an uninitialized object"
msgstr "impossible d'obtenir l'inverse d'un objet non initialisé"

#. R/pdMat.R: stop("cannot have duplicated column names in a \"pdMat\" object")
#. R/pdMat.R: stop("cannot have duplicated column names in a \"pdMat\" object")
#: R/pdMat.R:0
msgid "cannot have duplicated column names in a \"pdMat\" object"
msgstr "les noms de colonnes dupliqués ne sont pas permis dans un objet \"pdMat\""

#. R/corStruct.R: stop("cannot have zero distances in \"corSpatial\"")
#: R/corStruct.R:0
msgid "cannot have zero distances in \"corSpatial\""
msgstr "distances nulles non autorisées dans \"corSpatial\""

#. R/pdMat.R: stop("cannot obtain constrained coefficients with uninitialized dimensions")
#: R/pdMat.R:0
msgid "cannot obtain constrained coefficients with uninitialized dimensions"
msgstr "impossible d'obtenir les coefficients de contrainte avec des dimensions non initialisées"

#. R/newFunc.R: stop("cannot omit grouping factor without 'form'")
#: R/newFunc.R:0
msgid "cannot omit grouping factor without 'form'"
msgstr "le facteur utilisé pour le regroupement ne peut être omis sans 'form'"

#. R/nlsList.R: stop("cannot use an anonymous function for the model")
#: R/nlsList.R:0
msgid "cannot use an anonymous function for the model"
msgstr "impossible d'utiliser une formule anonyme pour le modèle"

#. R/nlme.R: warning("cannot use smaller level of grouping for \"correlation\" than for \"random\". Replacing the former with the latter.")
#: R/nlme.R:0
msgid "cannot use smaller level of grouping for \"correlation\" than for \"random\". Replacing the former with the latter."
msgstr "impossible d'utiliser un niveau plus petit pour le regroupement de \"correlation\" par rapport à \"random\". Replacement du premier par le second."

#. R/lme.R: warning("cannot use smaller level of grouping for 'correlation' than for 'random'. Replacing the former with the latter.")
#: R/lme.R:0
msgid "cannot use smaller level of grouping for 'correlation' than for 'random'. Replacing the former with the latter."
msgstr "impossible d'utiliser un niveau plus petit pour le regroupement de 'correlation' par rapport à 'random'. Replacement du premier par le second."

#. R/groupedData.R: warning("collapsing level cannot be smaller than display level; setting it to the display level")
#: R/groupedData.R:0
msgid "collapsing level cannot be smaller than display level; setting it to the display level"
msgstr "le niveau de fusion ne peut être plus petit que le niveau d'affichage ; il est fixé au niveau d'affichage"

#. R/gls.R: gettextf("computed \"gls\" fit is singular, rank %s", rnk)
#: R/gls.R:0
msgid "computed \"gls\" fit is singular, rank %s"
msgstr "l'ajustement \"gls\" calculé est singulier, de rang %s"

#. R/varFunc.R: stop("constant in \"varConstProp\" structure must be > 0")
#. R/varFunc.R: stop("constant in \"varConstProp\" structure must be > 0")
#: R/varFunc.R:0
msgid "constant in \"varConstProp\" structure must be > 0"
msgstr "la constante dans la structure \"varConstPower\" doit être > O"

#. R/lmList.R: stop("covariate must be a data frame")
#. R/lme.R: stop("covariate must be a data frame")
#: R/lmList.R:0 R/lme.R:0
msgid "covariate must be a data frame"
msgstr "la covariable doit être un tableau de données (data.frame)"

#. R/lmList.R: stop("covariate must be numeric")
#. R/newMethods.R: stop("covariate must be numeric")
#: R/lmList.R:0 R/newMethods.R:0
msgid "covariate must be numeric"
msgstr "la covariable doit être numérique"

#. R/lme.R: stop("covariate must have a level attribute when 'id' is a formula")
#: R/lme.R:0
msgid "covariate must have a level attribute when 'id' is a formula"
msgstr "la covariable doit avoir un attribut 'level', lorsque 'id' est une formule"

#. R/lme.R: stop("covariate must have a level attribute when 'idLabels' is a formula")
#: R/lme.R:0
msgid "covariate must have a level attribute when 'idLabels' is a formula"
msgstr "la covariable doit avoir un attribut 'level', lorsque 'idLabels' est une formule"

#. R/lme.R: stop("covariate must have a level attribute when groups are present")
#: R/lme.R:0
msgid "covariate must have a level attribute when groups are present"
msgstr "la covariable doit avoir un attribut 'level', lorsque des groupes sont présents"

#. R/corStruct.R: stop("covariate must have unique integer values within groups for \"corARMA\" objects")
#: R/corStruct.R:0
#, fuzzy
msgid "covariate must have unique integer values within groups for \"corARMA\" objects"
msgstr "la covariable doit avoir des valeurs uniques pour les intragroupes des objets \"corARMA\""

#. R/corStruct.R: stop("covariate must have unique values within groups for \"corAR1\" objects")
#: R/corStruct.R:0
msgid "covariate must have unique values within groups for \"corAR1\" objects"
msgstr "La covariable doit avoir des valeurs uniques pour les intragroupes des objets \"corAR1\""

#. R/corStruct.R: stop("covariate must have unique values within groups for \"corCAR1\" objects")
#: R/corStruct.R:0
msgid "covariate must have unique values within groups for \"corCAR1\" objects"
msgstr "la covariable doit avoir des valeurs uniques pour les intragroupes des objets \"corCAR1\""

#. R/corStruct.R: stop("covariate must have unique values within groups for \"corNatural\" objects")
#: R/corStruct.R:0
msgid "covariate must have unique values within groups for \"corNatural\" objects"
msgstr "la cavariable doit avoir des valeurs uniques pour les intragroupes des objets 'corNatural'"

#. R/corStruct.R: stop("covariate must have unique values within groups for \"corSymm\" objects")
#: R/corStruct.R:0
msgid "covariate must have unique values within groups for \"corSymm\" objects"
msgstr "La covariable doit avoir des valeurs uniques à l'intérieur des groupes pour les objets \"corSymm\""

#. R/newMethods.R: stop("data argument to \"data.frame\" method for 'getGroups' does not make sense")
#: R/newMethods.R:0
msgid "data argument to \"data.frame\" method for 'getGroups' does not make sense"
msgstr "l'argument 'data' pour la méthode \"data.frame\" de 'getGroups' n'a pas de sens"

#. R/gls.R: gettextf("data in %s call must evaluate to a data frame", sQuote(substitute(object)))
#. R/lme.R: gettextf("data in %s call must evaluate to a data frame", sQuote(substitute(object)))
#: R/gls.R:0 R/lme.R:0
msgid "data in %s call must evaluate to a data frame"
msgstr "les données dans l'appel %s doivent être évaluées comme un tableau de données (\"data frame\")"

#. R/simulate.R: stop("degrees of freedom and weights must have the same length")
#: R/simulate.R:0
msgid "degrees of freedom and weights must have the same length"
msgstr "les degrés de liberté et les pondérations doivent avoir la même taille"

#. R/zzMethods.R: warning("deviance undefined for REML fit")
#: R/zzMethods.R:0
msgid "deviance undefined for REML fit"
msgstr ""

#. R/pdMat.R: stop("dimnames of 'value' must match or be NULL")
#: R/pdMat.R:0
msgid "dimnames of 'value' must match or be NULL"
msgstr "les noms de dimensions ('dimnames') des valeurs doivent correspondre ou bien être NULL"

#. R/corStruct.R: gettextf("do not know how to calculate correlation matrix of %s object",     dQuote(class(object)[1]))
#: R/corStruct.R:0
msgid "do not know how to calculate correlation matrix of %s object"
msgstr "Incapable de calculer la matrice de corrélation de l'objet %s"

#. R/varFunc.R: gettextf("do not know how to get coefficients for %s object",     dQuote(class(object)[1]))
#: R/varFunc.R:0
msgid "do not know how to get coefficients for %s object"
msgstr "impossible d'obtenir les coefficients de l'objet %s"

#. R/pdMat.R: stop("do not know how to obtain constrained coefficients")
#: R/pdMat.R:0
msgid "do not know how to obtain constrained coefficients"
msgstr "impossible d'obtenir les coefficients de contrainte"

#. R/corStruct.R: gettextf("do not know how to obtain parameters of %s object",     dQuote(class(object)[1]))
#: R/corStruct.R:0
msgid "do not know how to obtain parameters of %s object"
msgstr "incapable d'obtenir les paramètres de l'objet %s"

#. R/reStruct.R: stop("elements in 'object' must be formulas or \"pdMat\" objects")
#: R/reStruct.R:0
msgid "elements in 'object' must be formulas or \"pdMat\" objects"
msgstr "les éléments dans 'object' doivent être des formules ou des objets \"pdMat\""

#. R/lme.R: gettextf("fewer observations than random effects in all level %s groups",     Q, domain = "R-nlme")
#. R/nlme.R: gettextf("fewer observations than random effects in all level %s groups",     Q)
#: R/lme.R:0 R/nlme.R:0
msgid "fewer observations than random effects in all level %s groups"
msgstr "moins d'observations qu'il n'y a d'effets aléatoires dans les niveaux des groupes %s"

#. R/groupedData.R: stop("first argument to 'groupedData' must be a two-sided formula")
#: R/groupedData.R:0
msgid "first argument to 'groupedData' must be a two-sided formula"
msgstr "le premier argument à 'groupedData' doit être une formule à deux membres"

#. R/groupedData.R: stop("first argument to 'nfGroupedData' must be a two-sided formula")
#: R/groupedData.R:0
msgid "first argument to 'nfGroupedData' must be a two-sided formula"
msgstr "le premier argument de 'nfGroupedData' doit être une formule à deux membres"

#. R/groupedData.R: stop("first argument to 'nmGroupedData' must be a two-sided formula")
#: R/groupedData.R:0
msgid "first argument to 'nmGroupedData' must be a two-sided formula"
msgstr "le premier argument de 'nmGroupedData' doit être une formule à deux membres"

#. R/lme.R: stop("first model has a different response from the rest")
#: R/lme.R:0
msgid "first model has a different response from the rest"
msgstr "le premier modèle a une réponse différente du reste"

#. R/lme.R: warning("fitted objects with different fixed effects. REML comparisons are not meaningful.")
#: R/lme.R:0
msgid "fitted objects with different fixed effects. REML comparisons are not meaningful."
msgstr "les objets ont été ajustés avec différents effets fixes. Les comparaisons REML n'ont aucun sens dans ce cas."

#. R/varFunc.R: stop("fixed parameter names in 'varIdent' must be a subset of group names")
#: R/varFunc.R:0
msgid "fixed parameter names in 'varIdent' must be a subset of group names"
msgstr "les noms des paramètres fixés dans 'varIdent' doivent être un sous-ensemble des noms de groupes"

#. R/varFunc.R: stop("fixed parameters must have group names")
#. R/varFunc.R: stop("fixed parameters must have group names")
#. R/varFunc.R: stop("fixed parameters must have group names")
#. R/varFunc.R: stop("fixed parameters must have group names")
#: R/varFunc.R:0
msgid "fixed parameters must have group names"
msgstr "les paramètres fixés doivent avoir des noms de groupes"

#. R/varFunc.R: stop("fixed parameters must have group names in 'varExp'")
#: R/varFunc.R:0
msgid "fixed parameters must have group names in 'varExp'"
msgstr "les paramètres fixes doivent avoir des noms de groupes dans 'varExp'"

#. R/varFunc.R: stop("fixed parameters must have group names in 'varPower'")
#: R/varFunc.R:0
msgid "fixed parameters must have group names in 'varPower'"
msgstr "les paramètres fixés doivent avoir des noms de groupes dans 'varPower'"

#. R/varFunc.R: stop("fixed parameters must have names in 'varIdent'")
#: R/varFunc.R:0
msgid "fixed parameters must have names in 'varIdent'"
msgstr "les paramètres fixés doivent avoir leurs noms dans 'varIdent'"

#. R/lme.R: stop("fixed-effects model must be a formula of the form \"resp ~ pred\"")
#. R/simulate.R: stop("\nfixed-effects model must be a formula of the form \"resp ~ pred\"")
#: R/lme.R:0 R/simulate.R:0
msgid "fixed-effects model must be a formula of the form \"resp ~ pred\""
msgstr "un modèle à effet fixe doit être une formule de la forme \"resp ~ pred\""

#. R/newFunc.R: stop("formula(object) must return a formula")
#: R/newFunc.R:0
msgid "formula(object) must return a formula"
msgstr "formula(object) doit renvoyer une formule"

#. R/nlme.R: stop("formulae in 'fixed' must be of the form \"parameter ~ expr\"")
#. R/nlme.R: stop("formulae in 'fixed' must be of the form \"parameter ~ expr\"")
#: R/nlme.R:0
msgid "formulae in 'fixed' must be of the form \"parameter ~ expr\""
msgstr "les formules dans 'fixed' doivent être de la forme \"paramètre ~ expression\""

#. R/gnls.R: stop("formulae in 'params' must be of the form \"parameter ~ expr\"")
#. R/gnls.R: stop("formulae in 'params' must be of the form \"parameter ~ expr\"")
#: R/gnls.R:0
msgid "formulae in 'params' must be of the form \"parameter ~ expr\""
msgstr "les formules dans 'params' doivent être de la forme \"parameter ~ expr\""

#. R/nlme.R: stop("formulae in 'random' must be of the form \"parameter ~ expr\"")
#. R/nlme.R: stop("formulae in 'random' must be of the form \"parameter ~ expr\"")
#: R/nlme.R:0
msgid "formulae in 'random' must be of the form \"parameter ~ expr\""
msgstr "les formules dans 'random' doivent être de la forme \"paramètre ~ expression\""

#. R/nlme.R: gettextf("groups levels mismatch in 'random' and starting values for 'random' at level %s",     namGrp[i])
#: R/nlme.R:0
msgid "groups levels mismatch in 'random' and starting values for 'random' at level %s"
msgstr "niveaux de groupes incohérents dans 'random' et dans les valeurs de départ pour 'random' au niveau %s"

#. R/varFunc.R: warning("ignoring 'group' in \"varFixed\" formula")
#: R/varFunc.R:0
msgid "ignoring 'group' in \"varFixed\" formula"
msgstr "'group' est ignoré dans la formule \"varFixed\""

#. R/pdMat.R: warning("ignoring argument 'form'")
#. R/pdMat.R: warning("ignoring argument 'form'")
#: R/pdMat.R:0
msgid "ignoring argument 'form'"
msgstr "L'argument 'form' est ignoré"

#. R/pdMat.R: warning("ignoring argument 'nam'")
#: R/pdMat.R:0
msgid "ignoring argument 'nam'"
msgstr "L'argument 'nam' est ignoré"

#. R/varFunc.R: warning("ignoring initial values (no grouping factor)")
#: R/varFunc.R:0
#, fuzzy
msgid "ignoring initial values (no grouping factor)"
msgstr "'subset' ignoré lors de l'utilisation d'un seul facteur pour le regroupement"

#. R/nlme.R: stop("incompatible formulas for groups in \"random\" and \"correlation\"")
#. R/nlme.R: stop("incompatible formulas for groups in \"random\" and \"correlation\"")
#: R/nlme.R:0
msgid "incompatible formulas for groups in \"random\" and \"correlation\""
msgstr "formules incompatibles entre les groupes dans \"random\" et \"correlation\""

#. R/lme.R: stop("incompatible formulas for groups in 'random' and 'correlation'")
#. R/lme.R: stop("incompatible formulas for groups in 'random' and 'correlation'")
#: R/lme.R:0
msgid "incompatible formulas for groups in 'random' and 'correlation'"
msgstr "formules incompatibles entre les groupes dans 'random' et 'correlation'"

#. R/lme.R: stop("incompatible lengths for 'random' and grouping factors")
#. R/nlme.R: stop("incompatible lengths for 'random' and grouping factors")
#. R/simulate.R: stop("incompatible lengths for 'random' and grouping factors")
#: R/lme.R:0 R/nlme.R:0 R/simulate.R:0
msgid "incompatible lengths for 'random' and grouping factors"
msgstr "tailles incompatibles entre 'random' et les facteurs de regroupement"

#. R/reStruct.R: stop("incompatible lengths for object names")
#: R/reStruct.R:0
msgid "incompatible lengths for object names"
msgstr "longueurs non compatibles pour les noms de l'objet"

#. R/VarCov.R: gettextf("individual %s was not used in the fit", sQuote(individ))
#. R/VarCov.R: gettextf("individual %s was not used in the fit", sQuote(individual))
#: R/VarCov.R:0
msgid "individual %s was not used in the fit"
msgstr "l'individu %s n'a pas été utilisé dans l'ajustement"

#. R/corStruct.R: stop("initial value for \"corLin\" parameters of wrong dimension")
#. R/corStruct.R: stop("initial value for \"corLin\" parameters of wrong dimension")
#: R/corStruct.R:0
msgid "initial value for \"corLin\" parameters of wrong dimension"
msgstr "la valeur initiale pour les paramètres \"corLin\" n'ont pas la bonne taille"

#. R/corStruct.R: stop("initial value for \"corNatural\" parameters of wrong dimension")
#: R/corStruct.R:0
msgid "initial value for \"corNatural\" parameters of wrong dimension"
msgstr "La valeur initiale pour les paramètres \"corNatural\" n'a pas la bonne dimension"

#. R/corStruct.R: stop("initial value for \"corSpatial\" parameters of wrong dimension")
#. R/corStruct.R: stop("initial value for \"corSpatial\" parameters of wrong dimension")
#: R/corStruct.R:0
msgid "initial value for \"corSpatial\" parameters of wrong dimension"
msgstr "la valeur initiale pour les paramètres \"corSpatial\" n'ont pas la bonne taille"

#. R/corStruct.R: stop("initial value for \"corSpher\" parameters of wrong dimension")
#. R/corStruct.R: stop("initial value for \"corSpher\" parameters of wrong dimension")
#: R/corStruct.R:0
msgid "initial value for \"corSpher\" parameters of wrong dimension"
msgstr "la valeur initiale pour les paramètres \"corSpher\" sont de la mauvaise taille"

#. R/corStruct.R: stop("initial value for \"corSymm\" parameters of wrong dimension")
#: R/corStruct.R:0
msgid "initial value for \"corSymm\" parameters of wrong dimension"
msgstr "La valeur initiale pour les paramètres de \"corSymm\" n'ont pas les bonnes dimensions"

#. R/lme.R: warning("initial value for \"reStruct\" overwritten in 'lme.lmList'")
#: R/lme.R:0
msgid "initial value for \"reStruct\" overwritten in 'lme.lmList'"
msgstr "la valeur initiale de \"reStruct\" est remplacée dans 'lme.lmList'"

#. R/varFunc.R: gettextf("initial value for \"varExp\" should be of length %d",     nStratVar)
#: R/varFunc.R:0
msgid "initial value for \"varExp\" should be of length %d"
msgstr "la valeur initiale pour \"varExp\" doit être de longueur %d"

#. R/varFunc.R: stop("initial value for \"varExp\" should be of length 1")
#: R/varFunc.R:0
msgid "initial value for \"varExp\" should be of length 1"
msgstr "la valeur initiale pour \"varExp\" devrait être de longueur 1"

#. R/varFunc.R: gettextf("initial value for \"varIdent\" should be of length %d",     len)
#: R/varFunc.R:0
msgid "initial value for \"varIdent\" should be of length %d"
msgstr "la valeur initiale de \"varIdent\" doit être de longueur %d"

#. R/varFunc.R: gettextf("initial value for \"varPower\" should be of length %d",     nStratVar)
#: R/varFunc.R:0
msgid "initial value for \"varPower\" should be of length %d"
msgstr "la valeur initiale pour \"varPower\" devrait être de longueur %d"

#. R/varFunc.R: stop("initial value for \"varPower\" should be of length 1")
#: R/varFunc.R:0
msgid "initial value for \"varPower\" should be of length 1"
msgstr "la valeur initiale pour \"varPower\" devrait être de longueur 1"

#. R/corStruct.R: warning("initial value for 'range' less than minimum distance. Setting it to 1.1 * min(distance)")
#. R/corStruct.R: warning("initial value for 'range' less than minimum distance. Setting it to 1.1 * min(distance)")
#: R/corStruct.R:0
msgid "initial value for 'range' less than minimum distance. Setting it to 1.1 * min(distance)"
msgstr "la valeur initiale pour l'étendue ('range') est inférieure à la distance minimale. Elle est fixée à 1.1 * min(distance)"

#. R/nlme.R: warning("initial value for 'reStruct' overwritten in 'nlme.nlsList'")
#: R/nlme.R:0
msgid "initial value for 'reStruct' overwritten in 'nlme.nlsList'"
msgstr "la valeur initiale pour 'reStruct' est remplacée dans 'nlme.nlsList'"

#. R/corStruct.R: stop("initial value for parameter of wrong length")
#: R/corStruct.R:0
msgid "initial value for parameter of wrong length"
msgstr "la valeur initiale du paramètre est de la mauvaise taille"

#. R/corStruct.R: gettextf("initial value in \"corCompSymm\" must be greater than %s",     attr(object, "inf"))
#: R/corStruct.R:0
msgid "initial value in \"corCompSymm\" must be greater than %s"
msgstr "La valeur initiale dans \"corCompSymm\" doit être plus grande que %s"

#. R/corStruct.R: stop("initial value of nugget ratio must be between 0 and 1")
#. R/corStruct.R: stop("initial value of nugget ratio must be between 0 and 1")
#. R/corStruct.R: stop("initial value of nugget ratio must be between 0 and 1")
#: R/corStruct.R:0
msgid "initial value of nugget ratio must be between 0 and 1"
msgstr "la valeur initiale du coefficient de pépite doit être comprise entre 0 et 1"

#. R/varFunc.R: gettext("initial value should be of length %d", nStratVar)
#. R/varFunc.R: gettext("initial value should be of length %d", aux)
#. R/varFunc.R: gettext("initial value should be of length %d", nStratVar)
#. R/varFunc.R: gettext("initial value should be of length %d", aux)
#: R/varFunc.R:0
msgid "initial value should be of length %d"
msgstr "la valeur initiale doit être de longueur %d"

#. R/corStruct.R: stop("initial values for \"corNatural\" do not define a positive-definite correlation structure")
#: R/corStruct.R:0
msgid "initial values for \"corNatural\" do not define a positive-definite correlation structure"
msgstr "Les valeurs initiales pour \"corNatural\" ne sont pas définies sous forme d'une structure de corrélation positive-définie"

#. R/corStruct.R: stop("initial values for \"corNatural\" must be between -1 and 1")
#: R/corStruct.R:0
msgid "initial values for \"corNatural\" must be between -1 and 1"
msgstr "Les valeurs initiales pour \"corNatural\" doivent se situer entre -1 et 1"

#. R/corStruct.R: stop("initial values for \"corSymm\" do not define a positive-definite correlation structure")
#: R/corStruct.R:0
msgid "initial values for \"corSymm\" do not define a positive-definite correlation structure"
msgstr "les valeurs initiales pour \"corSymm\" ne définissent pas une structure de corrélation positive-définie"

#. R/corStruct.R: stop("initial values for \"corSymm\" must be between -1 and 1")
#: R/corStruct.R:0
msgid "initial values for \"corSymm\" must be between -1 and 1"
msgstr "Les valeurs initiales pour \"corSymm\" doivent se situer entre -1 et 1"

#. R/varFunc.R: stop("initial values for 'varIdent' must be > 0")
#: R/varFunc.R:0
msgid "initial values for 'varIdent' must be > 0"
msgstr "les valeurs initiales pour 'varIdent' doivent être > 0"

#. R/varFunc.R: stop("initial values must have group names in 'varExp'")
#: R/varFunc.R:0
msgid "initial values must have group names in 'varExp'"
msgstr "les valeurs initiales doivent avoir des noms de groupes dans 'varExp'"

#. R/varFunc.R: stop("initial values must have group names in 'varIdent'")
#: R/varFunc.R:0
msgid "initial values must have group names in 'varIdent'"
msgstr "les valeurs initiales doivent avoir des noms de groupes dans 'varIdent'"

#. R/varFunc.R: stop("initial values must have group names in 'varPower'")
#: R/varFunc.R:0
msgid "initial values must have group names in 'varPower'"
msgstr "les valeurs initiales doivent avoir des noms de groupes dans 'varPower'"

#. R/pdMat.R: warning("initializing \"pdCompSymm\" object is not positive definite")
#: R/pdMat.R:0
msgid "initializing \"pdCompSymm\" object is not positive definite"
msgstr "l'initialisation d'un objet \"pdCompSymm\" n'est pas fini et positif"

#. R/newMethods.R: stop("invalid formula for groups")
#: R/newMethods.R:0
msgid "invalid formula for groups"
msgstr "formule incorrecte pour les groupes"

#. R/pdMat.R: stop("length of 'nam' not consistent with dimensions of initial value")
#: R/pdMat.R:0
msgid "length of 'nam' not consistent with dimensions of initial value"
msgstr "la longueur de 'nam' ne correspond pas aux dimensions initiales"

#. R/newMethods.R: gettextf("level of %s does not match formula %s", level[aux],     sQuote(deparse(form)))
#. R/newMethods.R: gettextf("level of %s does not match formula %s", level[aux],     sQuote(deparse(form)))
#: R/newMethods.R:0
msgid "level of %s does not match formula %s"
msgstr "le niveau de %s ne correspond pas à la formule %s"

#. R/nlme.R: gettextf("list with starting values for random effects must have names or be of length %d",     Q)
#: R/nlme.R:0
msgid "list with starting values for random effects must have names or be of length %d"
msgstr "la liste contenant les valeurs de départ pour les effets aléatoires doit être nommées ou de longueur %d"

#. R/lmList.R: stop("log-likelihood not available with NULL fits")
#: R/lmList.R:0
msgid "log-likelihood not available with NULL fits"
msgstr "la log-vraissemblance n'est pas disponible avec des ajustements NULL"

#. R/lme.R: gettext("maximum number of iterations (lmeControl(maxIter)) reached without convergence",     domain = "R-nlme")
#: R/lme.R:0
msgid "maximum number of iterations (lmeControl(maxIter)) reached without convergence"
msgstr "le nombre maximum d'itérations (lmeControl(maxIter)) est atteint, mais pas la convergence"

#. R/nlme.R: gettextf("maximum number of iterations (maxIter = %d) reached without convergence",     controlvals$maxIter, domain = "R-nlme")
#: R/nlme.R:0
msgid "maximum number of iterations (maxIter = %d) reached without convergence"
msgstr "le nombre maximum d'itérations (maxIter = %d) est atteint, mais pas la convergence"

#. R/gls.R: stop("maximum number of iterations reached without convergence")
#: R/gls.R:0
msgid "maximum number of iterations reached without convergence"
msgstr "le nombre maximum d'itérations est atteint, mais pas la convergence"

#. R/varFunc.R: stop("mismatch between group names and fixed values names")
#. R/varFunc.R: stop("mismatch between group names and fixed values names")
#. R/varFunc.R: stop("mismatch between group names and fixed values names")
#. R/varFunc.R: stop("mismatch between group names and fixed values names")
#: R/varFunc.R:0
msgid "mismatch between group names and fixed values names"
msgstr "incohérence entre les noms de groupes et les noms des valeurs fixées"

#. R/nlsList.R: stop("missing call attribute in \"nlsList\" object")
#: R/nlsList.R:0
msgid "missing call attribute in \"nlsList\" object"
msgstr "attribut d'appel manquant dans l'objet \"nlsList\""

#. R/nlme.R: stop("model formula must be of the form \"resp ~ pred\"")
#: R/nlme.R:0
msgid "model formula must be of the form \"resp ~ pred\""
msgstr "la formule du modèle doit être de la forme \"rep ~ pred\""

#. R/gls.R: stop("model must be a formula of the form \"resp ~ pred\"")
#: R/gls.R:0
msgid "model must be a formula of the form \"resp ~ pred\""
msgstr "le modèle doit être une formule de la forme \"resp ~ pred\""

#. R/simulate.R: stop("models with \"corStruct\" and/or \"varFunc\" objects not allowed")
#. R/simulate.R: stop("models with \"corStruct\" and/or \"varFunc\" objects not allowed")
#: R/simulate.R:0
msgid "models with \"corStruct\" and/or \"varFunc\" objects not allowed"
msgstr "les modèles avec objets \"corStruct\" et / ou \"varFunc\" ne sont pas autorisés"

#. R/simulate.R: stop("more than one degree of freedom is needed when one them is zero.")
#: R/simulate.R:0
msgid "more than one degree of freedom is needed when one them is zero."
msgstr "plus d'un degré de liberté est nécessaire lorsque l'un d'entre eux vaut zéro."

#. R/corStruct.R: stop("moving average order must be a non-negative integer")
#: R/corStruct.R:0
msgid "moving average order must be a non-negative integer"
msgstr "l'ordre de la moyenne mobile doit être un entier positif ou nul"

#. R/lmList.R: stop("multiple levels not allowed")
#. R/lmList.R: stop("multiple levels not allowed")
#. R/nlsList.R: stop("multiple levels not allowed")
#: R/lmList.R:0 R/nlsList.R:0
msgid "multiple levels not allowed"
msgstr "niveaux multiples non permis"

#. R/pdMat.R: stop("must give names when initializing \"pdCompSymm\" from parameter without a formula")
#: R/pdMat.R:0
msgid "must give names when initializing \"pdCompSymm\" from parameter without a formula"
msgstr "il faut fournir les noms lors de l'initialisation de \"pdCompSymm\" depuis un paramètre sans fournir de formule"

#. R/pdMat.R: stop("must give names when initializing \"pdIdent\" from parameter without a formula")
#: R/pdMat.R:0
msgid "must give names when initializing \"pdIdent\" from parameter without a formula"
msgstr "il faut fournir les noms lorsqu'un objet \"pdIdent\" est initialisé depuis un paramètre sans fournir de formule"

#. R/pdMat.R: stop("must give names when initializing from matrix or parameter")
#: R/pdMat.R:0
msgid "must give names when initializing from matrix or parameter"
msgstr "lors de l'initialisation depuis une matrice ou un paramètre, il faut fournir les noms"

#. R/pdMat.R: stop("must have formula when no names are given")
#: R/pdMat.R:0
msgid "must have formula when no names are given"
msgstr "une formule est nécessaire lorsque les noms ne sont pas fournis"

#. R/pdMat.R: stop("names being assigned do not correspond to a permutation of previous names")
#: R/pdMat.R:0
msgid "names being assigned do not correspond to a permutation of previous names"
msgstr "les noms affecté ne correspondent pas à une permutation des noms de départ"

#. R/nlme.R: gettextf("names mismatch in 'random' and starting values  for 'random' at level %s",     namGrp[i])
#: R/nlme.R:0
msgid "names mismatch in 'random' and starting values  for 'random' at level %s"
msgstr "incohérence de noms entre 'random' et les valeurs de départ pour 'random' au niveau %s"

#. R/pdMat.R: stop("names of 'value' are not consistent with 'nam' argument")
#: R/pdMat.R:0
msgid "names of 'value' are not consistent with 'nam' argument"
msgstr "Les noms de 'value' ne sont pas conformes avec l'argument 'nam'"

#. R/pdMat.R: stop("names of object and value must match")
#: R/pdMat.R:0
msgid "names of object and value must match"
msgstr "les noms de l'objet et ses valeurs ne correspondent pas"

#. R/varFunc.R: stop("names of starting value for \"varIdent\" object must contain all but one of the stratum levels")
#: R/varFunc.R:0
msgid "names of starting value for \"varIdent\" object must contain all but one of the stratum levels"
msgstr "les noms des valeurs de départ pour \"varIdent\" doivent contenir tous les niveaux stratifiés sauf un"

#. R/gls.R: stop("need an object with call component")
#. R/gnls.R: stop("need an object with call component")
#. R/lmList.R: stop("need an object with call component")
#. R/lme.R: stop("need an object with call component")
#. R/nlme.R: stop("need an object with call component")
#: R/gls.R:0 R/gnls.R:0 R/lmList.R:0 R/lme.R:0 R/nlme.R:0
msgid "need an object with call component"
msgstr "nécessite un objet avec une composante 'call'"

#. R/corStruct.R: stop("need data to calculate covariate")
#: R/corStruct.R:0
msgid "need data to calculate covariate"
msgstr "des données sont nécessaires pour calculer la covariable"

#. R/corStruct.R: stop("need data to calculate covariate of \"corStruct\" object")
#: R/corStruct.R:0
msgid "need data to calculate covariate of \"corStruct\" object"
msgstr "des données sont nécessaires pour calculer les covariables d'un objet \"corStruct\""

#. R/simulate.R: stop("negative degrees of freedom not allowed")
#: R/simulate.R:0
msgid "negative degrees of freedom not allowed"
msgstr "des degrés de liberté négatifs ne sont pas permis"

#. R/gls.R: stop("no coefficients to fit")
#: R/gls.R:0
msgid "no coefficients to fit"
msgstr "pas de coefficients à ajuster"

#. R/lme.R: stop("no condensed linear model")
#: R/lme.R:0
msgid "no condensed linear model"
msgstr "aucun modèle linéaire condensé"

#. R/pdMat.R: stop("no default method for extracting the square root of a \"pdMat\" object")
#: R/pdMat.R:0
msgid "no default method for extracting the square root of a \"pdMat\" object"
msgstr "pas de méthode par défaut pour extraire la racine carrée de l'objet \"pdMat\""

#. R/newFunc.R: stop("no degrees of freedom for estimating std. dev.")
#: R/newFunc.R:0
msgid "no degrees of freedom for estimating std. dev."
msgstr "aucun nombre de degrés de liberté pour l'estimation de l'écart type"

#. R/simulate.R: stop("no degrees of freedom specified")
#: R/simulate.R:0
msgid "no degrees of freedom specified"
msgstr "aucun degré de liberté n'est spécifié"

#. R/lme.R: stop("no effects allowed in right side of formula")
#: R/lme.R:0
msgid "no effects allowed in right side of formula"
msgstr "aucun effet n'est autorisé dans le membre de droite de la formule"

#. R/lme.R: stop("no fitted \"lme\" object")
#: R/lme.R:0
msgid "no fitted \"lme\" object"
msgstr "pas d'objet \"lme\" ajusté"

#. R/gnls.R: stop("no initial values for model parameters")
#: R/gnls.R:0
msgid "no initial values for model parameters"
msgstr "pas de valeurs initiales pour les paramètres du modèle"

#. R/newMethods.R: stop("no model variogram available with 'showModel = TRUE'")
#: R/newMethods.R:0
msgid "no model variogram available with 'showModel = TRUE'"
msgstr "aucun variogramme n'est disponible pour le modèle avec 'showModel = TRUE'"

#. R/lmList.R: stop("nonexistent group in 'newdata'")
#: R/lmList.R:0
msgid "nonexistent group in 'newdata'"
msgstr "groupe inexistant dans 'newdata'"

#. R/varFunc.R: stop("nonexistent group names for initial values")
#. R/varFunc.R: stop("nonexistent group names for initial values")
#: R/varFunc.R:0
msgid "nonexistent group names for initial values"
msgstr "noms de groupes inexistants pour les valeurs initiales"

#. R/varFunc.R: stop("nonexistent group names for initial values in \"varExp\"")
#: R/varFunc.R:0
msgid "nonexistent group names for initial values in \"varExp\""
msgstr "noms de groupes inexistants pour les valeurs initiales de \"varExp\""

#. R/varFunc.R: stop("nonexistent group names for initial values in \"varPower\"")
#: R/varFunc.R:0
msgid "nonexistent group names for initial values in \"varPower\""
msgstr "noms de groupes inexistants pour les valeurs initiales de \"varPower\""

#. R/varFunc.R: stop("nonexistent group names for initial values in 'varIdent'")
#: R/varFunc.R:0
msgid "nonexistent group names for initial values in 'varIdent'"
msgstr "noms de groupes inexistants pour les valeurs initiales dans 'varIdent'"

#. R/lmList.R: stop("nonexistent group requested in 'subset'")
#: R/lmList.R:0
msgid "nonexistent group requested in 'subset'"
msgstr "groupe inexistant mais requis dans 'subset'"

#. R/lmList.R: stop("nonexistent groups requested in 'subset'")
#. R/lmList.R: stop("nonexistent groups requested in 'subset'")
#. R/lmList.R: stop("nonexistent groups requested in 'subset'")
#. R/lmList.R: stop("nonexistent groups requested in 'subset'")
#: R/lmList.R:0
msgid "nonexistent groups requested in 'subset'"
msgstr "groupes inexistants demandés dans 'subset'"

#. R/zzMethods.R: stop("not (yet) implemented.  Contributions are welcome; use intervals() instead (for now)")
#: R/zzMethods.R:0
msgid "not (yet) implemented.  Contributions are welcome; use intervals() instead (for now)"
msgstr ""

#. R/VarCov.R: stop("not implemented for \"nlme\" objects")
#: R/VarCov.R:0
msgid "not implemented for \"nlme\" objects"
msgstr "Pas implémenté pour des objets \"nlme\""

#. R/VarCov.R: stop("not implemented for correlation structures without a grouping factor")
#: R/VarCov.R:0
msgid "not implemented for correlation structures without a grouping factor"
msgstr ""

#. R/VarCov.R: stop("not implemented for multiple levels of nesting")
#: R/VarCov.R:0
msgid "not implemented for multiple levels of nesting"
msgstr "Pas implémenté pour des niveaux multiples d'imbrication"

#. R/VarCov.R: stop("not implemented for uncorrelated errors")
#: R/VarCov.R:0
#, fuzzy
msgid "not implemented for uncorrelated errors"
msgstr "Pas implémenté pour des objets \"nlme\""

#. R/nlme.R: gettextf("number of columns in starting values for random component at level %s should be %d",     namGrp[i], rlength[i])
#: R/nlme.R:0
msgid "number of columns in starting values for random component at level %s should be %d"
msgstr "le nombre de colonnes dans les valeurs de départ pour la composante aléatoire au niveau %s doit être %d"

#. R/nlme.R: gettextf("number of rows in starting values for random component at level %s should be %d",     namGrp[i], Dims$ngrps[i])
#: R/nlme.R:0
msgid "number of rows in starting values for random component at level %s should be %d"
msgstr "le nombre de lignes dans les valeurs de départ pour la composante aléatoire au niveau %s doit être %d"

#. R/gnls.R: stop("object formula must be of the form \"resp ~ pred\"")
#: R/gnls.R:0
msgid "object formula must be of the form \"resp ~ pred\""
msgstr "l'objet formule doit être de la forme \"rep ~ pred\""

#. R/gls.R: gettextf("object must inherit from class %s", "\"gls\"")
#. R/lme.R: gettextf("object must inherit from class %s", "\"lme\"")
#. R/newFunc.R: gettextf("object must inherit from class %s", "\"data.frame\"")
#. R/newFunc.R: gettextf("object must inherit from class %s", "\"data.frame\"")
#. R/newFunc.R: gettextf("object must inherit from class %s", "\"lmList\"")
#: R/gls.R:0 R/lme.R:0 R/newFunc.R:0
msgid "object must inherit from class %s"
msgstr "l'objet doit hériter de la classe %s"

#. R/lme.R: stop("objects must have a \"call\" component or attribute")
#: R/lme.R:0
msgid "objects must have a \"call\" component or attribute"
msgstr "les objets doivent avoir une composante ou un attribut \"call\""

#. R/newFunc.R: stop("objects must have coefficients with same row names")
#: R/newFunc.R:0
msgid "objects must have coefficients with same row names"
msgstr "les objets doivent avoir des coefficients qui ont mêmes noms de lignes"

#. R/lme.R: gettextf("objects must inherit from classes %s, or %s", paste(head(valid.cl,     -1), collapse = ", "), tail(valid.cl, 1))
#: R/lme.R:0
#, fuzzy
msgid "objects must inherit from classes %s, or %s"
msgstr "l'objet doit hériter de la classe %s ou %s"

#. R/gls.R: stop("offset() terms are not supported")
#. R/lme.R: stop("offset() terms are not supported")
#: R/gls.R:0 R/lme.R:0
msgid "offset() terms are not supported"
msgstr ""

#. R/nlsList.R: stop("old-style self-starting model functions\nare no longer supported.\nNew selfStart functions are available.\nUse\n  SSfpl instead of fpl,\n  SSfol instead of first.order.log,\n  SSbiexp instead of biexp,\n  SSlogis instead of logistic.\nIf writing your own selfStart model, see\n  \"help(selfStart)\"\nfor the new form of the \"initial\" attribute.")
#: R/nlsList.R:0
msgid ""
"old-style self-starting model functions\n"
"are no longer supported.\n"
"New selfStart functions are available.\n"
"Use\n"
"  SSfpl instead of fpl,\n"
"  SSfol instead of first.order.log,\n"
"  SSbiexp instead of biexp,\n"
"  SSlogis instead of logistic.\n"
"If writing your own selfStart model, see\n"
"  \"help(selfStart)\"\n"
"for the new form of the \"initial\" attribute."
msgstr ""
"les fonctions de modèles 'self-start' d'un ancien style\n"
"ne sont plus supportées.\n"
"Les nouvelles fonctions selfStart sont disponibles.\n"
"Utilisez\n"
"  SSfpl à la place de fpl,\n"
"  SSfol à la place de first.order.log,\n"
"  SSbiexp à la place de biexp,\n"
"  SSlogis à la place de logistic.\n"
"Si vous créez votre propre fonction de modèle selfStart, voyez\n"
"  \"help(selfStart)\"\n"
"pour la nouvelle forme de l'attribut \"initial\"."

#. R/groupedData.R: stop("only one display level allowed")
#: R/groupedData.R:0
msgid "only one display level allowed"
msgstr "un seul niveau d'affichage est permis"

#. R/gls.R: stop("only one level allowed for predictions")
#: R/gls.R:0
msgid "only one level allowed for predictions"
msgstr "seul un niveau est permis pour les prédictions"

#. R/newFunc.R: stop("only one level allowed in 'gapply'")
#: R/newFunc.R:0
msgid "only one level allowed in 'gapply'"
msgstr "seul un niveau est autorisé pour 'gapply'"

#. R/newFunc.R: stop("only one level allowed in 'gsummary'")
#: R/newFunc.R:0
msgid "only one level allowed in 'gsummary'"
msgstr "seul un niveau est permis dans 'gsummary'"

#. R/groupedData.R: stop("only one level of grouping allowed")
#: R/groupedData.R:0
msgid "only one level of grouping allowed"
msgstr "seul un niveau de regroupement est autorisé"

#. R/newMethods.R: stop("only residuals allowed")
#: R/newMethods.R:0
msgid "only residuals allowed"
msgstr "seuls les résidus sont autorisés"

#. R/lmList.R: stop("only residuals and random effects allowed")
#. R/lme.R: stop("only residuals and random effects allowed")
#: R/lmList.R:0 R/lme.R:0
msgid "only residuals and random effects allowed"
msgstr "seuls les résidus et les effets aléatoires sont permis"

#. R/lme.R: stop("only single effects allowed in left side of 'form'")
#: R/lme.R:0
msgid "only single effects allowed in left side of 'form'"
msgstr "seul un effet est permis dans le membre de gauche de 'form'"

#. R/lme.R: stop("only single level allowed")
#. R/lme.R: stop("only single level allowed")
#: R/lme.R:0
msgid "only single level allowed"
msgstr "seul un niveau est autorisé"

#. R/simulate.R: stop("order of arguments in 'simulate.lme' has changed to conform with generic in R-2.2.0",     domain = "R-nlme")
#: R/simulate.R:0
msgid "order of arguments in 'simulate.lme' has changed to conform with generic in R-2.2.0"
msgstr ""

#. R/corStruct.R: stop("parameter in \"corCompSymm\" structure must be < 1 in absolute value")
#: R/corStruct.R:0
msgid "parameter in \"corCompSymm\" structure must be < 1 in absolute value"
msgstr "les paramètres d'une structure \"corCompSymm\" doivent être < 1 en valeur absolue"

#. R/corStruct.R: stop("parameter in AR(1) structure must be between -1 and 1")
#: R/corStruct.R:0
msgid "parameter in AR(1) structure must be between -1 and 1"
msgstr "Le paramètre dans la structure AR(1) doit se situer entre - 1 et 1"

#. R/corStruct.R: stop("parameter in CAR(1) structure must be between 0 and 1")
#: R/corStruct.R:0
msgid "parameter in CAR(1) structure must be between 0 and 1"
msgstr "Le paramètre dans la structure CAR(1) doit se situer entre -1 et 1"

#. R/corStruct.R: stop("parameters in ARMA structure must be < 1 in absolute value")
#: R/corStruct.R:0
msgid "parameters in ARMA structure must be < 1 in absolute value"
msgstr "les paramètres d'une structure ARMA doivent être < 1 en valeur absolue"

#. R/simulate.R: stop("plot method only implemented for comparing models")
#. R/simulate.R: stop("plot method only implemented for comparing models")
#: R/simulate.R:0
msgid "plot method only implemented for comparing models"
msgstr "la méthode 'plot' n'est implémentée que pour la comparaison de modèles"

#. R/corStruct.R: stop("range must be > 0 in \"corSpher\" initial value")
#: R/corStruct.R:0
msgid "range must be > 0 in \"corSpher\" initial value"
msgstr "l'étendue des valeurs initiales dans \"corSpher\" doit être > 0"

#. R/groupedData.R: stop("right-hand side of first argument must be a conditional expression")
#. R/groupedData.R: stop("right-hand side of first argument must be a conditional expression")
#. R/groupedData.R: stop("right-hand side of first argument must be a conditional expression")
#: R/groupedData.R:0
msgid "right-hand side of first argument must be a conditional expression"
msgstr "le membre de droite du premier argument doit être une expression conditionnelle"

#. R/nlsList.R: stop("second argument must be a groupedData object")
#: R/nlsList.R:0
msgid "second argument must be a groupedData object"
msgstr "le second argument doit être un objet 'groupedData'"

#. R/groupedData.R: stop("second argument to 'groupedData' must inherit from data.frame")
#. R/groupedData.R: stop("second argument to 'groupedData' must inherit from data.frame")
#: R/groupedData.R:0
msgid "second argument to 'groupedData' must inherit from data.frame"
msgstr "le second argument de 'groupedData' doit hériter d'un data.frame"

#. R/groupedData.R: stop("single group not supported -- use groupedData()")
#: R/groupedData.R:0
msgid "single group not supported -- use groupedData()"
msgstr ""

#. R/lme.R: warning("some fitted objects deleted because response differs from the first model")
#: R/lme.R:0
msgid "some fitted objects deleted because response differs from the first model"
msgstr "certains objets ajustés sont éliminés parce que leur réponse diffère du premier modèle"

#. R/gnls.R: stop("starting estimates must have names when 'params' is missing")
#: R/gnls.R:0
msgid "starting estimates must have names when 'params' is missing"
msgstr "les estimations initiales doivent être nommés lorsque 'params' est manquant"

#. R/nlme.R: stop("starting values for random effects must include group levels")
#: R/nlme.R:0
msgid "starting values for random effects must include group levels"
msgstr "les valeurs de départ pour les effets aléatoires doivent inclure les niveaux de groupe"

#. R/nlme.R: stop("starting values for random effects should be a list, or a matrix")
#: R/nlme.R:0
msgid "starting values for random effects should be a list, or a matrix"
msgstr "les valeurs de départ pour les effets aléatoires doivent être dans une liste ou dans une matrice"

#. R/nlme.R: stop("starting values for the 'fixed' component are not the correct length")
#: R/nlme.R:0
msgid "starting values for the 'fixed' component are not the correct length"
msgstr "les valeurs de départ pour la composante 'fixed' n'ont pas la bonne taille"

#. R/nlme.R: stop("starting values for the random components should be a list of matrices")
#: R/nlme.R:0
msgid "starting values for the random components should be a list of matrices"
msgstr "les valeurs de départ pour les composantes aléatoires devraient être un liste de matrices"

#. R/gnls.R: gettext("step halving factor reduced below minimum in NLS step")
#: R/gnls.R:0
msgid "step halving factor reduced below minimum in NLS step"
msgstr "le facteur de division par deux du pas est réduit en dessous du minimum dans un pas NLS"

#. R/nlme.R: gettext("step halving factor reduced below minimum in PNLS step")
#: R/nlme.R:0
msgid "step halving factor reduced below minimum in PNLS step"
msgstr "le facteur de réduction à chaque étape est abaissé en dessous du minimum à une étape PNLS"

#. R/gls.R: stop("terms can only be integers or characters")
#. R/lme.R: stop("terms can only be integers or characters")
#: R/gls.R:0 R/lme.R:0
msgid "terms can only be integers or characters"
msgstr "Les termes peuvent être seulement des entiers ou des chaînes de caractères"

#. R/lme.R: stop("terms must all have the same denominator DF")
#: R/lme.R:0
msgid "terms must all have the same denominator DF"
msgstr "Les termes doivent tous avoir le même nombre de degrés de liberté au dénominateur"

#. R/groupedData.R: gettextf("undefined collapsing level %s for %s", collapseLevel,     sQuote(substitute(object)))
#: R/groupedData.R:0
msgid "undefined collapsing level %s for %s"
msgstr "niveau de fusion non défini %s pour %s"

#. R/groupedData.R: gettextf("undefined display level %s for %s", displayLevel, sQuote(substitute(object)))
#: R/groupedData.R:0
msgid "undefined display level %s for %s"
msgstr "niveau d'affichage non défini %s pour %s"

#. R/groupedData.R: stop("undefined group declared in 'subset'")
#: R/groupedData.R:0
msgid "undefined group declared in 'subset'"
msgstr "groupe non déclaré dans 'subset'"

#. R/corStruct.R: stop("unique values of the covariate  for \"corSymm\" objects must be a sequence of consecutive integers")
#: R/corStruct.R:0
msgid "unique values of the covariate  for \"corSymm\" objects must be a sequence of consecutive integers"
msgstr "les valeurs uniques des covariables pour les objets \"corSymm\" doivent être des séquences d'entiers consécutifs"

#. R/corStruct.R: stop("unique values of the covariate for \"corNatural\" objects must be a sequence of consecutive integers")
#: R/corStruct.R:0
msgid "unique values of the covariate for \"corNatural\" objects must be a sequence of consecutive integers"
msgstr "les valeurs uniques pour la covariables des objets \"corNatural\" doivent être une séquence d'entiers consécutifs"

#. R/gls.R: stop("wrong group levels")
#. R/gls.R: stop("wrong group levels")
#: R/gls.R:0
msgid "wrong group levels"
msgstr "niveaux de groupes erronés"

#. R/pdMat.R: stop("x-y data to splom got botched somehow")
#: R/pdMat.R:0
msgid "x-y data to splom got botched somehow"
msgstr "les données x-y de 'splom' ont été corrompus"

#. R/lme.R: ngettext(sum(whichNA), "%s not available for plotting", "%s not available for plotting",     domain = "R-nlme")
#. R/lme.R: ngettext(sum(whichNA), "%s not available for plotting", "%s not available for plotting",     domain = "R-nlme")
#: R/lme.R:0
msgid "%s not available for plotting"
msgid_plural "%s not available for plotting"
msgstr[0] "%s non disponible pour le graphe"
msgstr[1] "%s non disponibles pour le graphe"

#. R/lmList.R: ngettext(sum(naV), "%s not found in data", "%s not found in data")
#. R/lmList.R: ngettext(sum(naV), "%s not found in data", "%s not found in data")
#. R/lmList.R: ngettext(sum(naV), "%s not found in data", "%s not found in data")
#. R/lme.R: ngettext(sum(naV), "%s not found in data", "%s not found in data")
#. R/lme.R: ngettext(sum(naV), "%s not found in data", "%s not found in data")
#. R/newMethods.R: ngettext(sum(naV), "%s not found in data", "%s not found in data")
#. R/newMethods.R: ngettext(sum(naV), "%s not found in data", "%s not found in data")
#: R/lmList.R:0 R/lme.R:0 R/newMethods.R:0
msgid "%s not found in data"
msgid_plural "%s not found in data"
msgstr[0] "%s non trouvé dans les données"
msgstr[1] "%s non trouvé dans les données"

#. R/newFunc.R: ngettext(sum(wchNot), "%s not matched", "%s not matched", domain = "R-nlme")
#: R/newFunc.R:0
msgid "%s not matched"
msgid_plural "%s not matched"
msgstr[0] "%s non assorti"
msgstr[1] "%s non assortis"

#. R/gls.R: ngettext(ncol(L), "'L' must have at most %d column", "'L' must have at most %d columns")
#. R/lme.R: ngettext(nX, "'L' must have at most %d column", "'L' must have at most %d columns")
#: R/gls.R:0 R/lme.R:0
msgid "'L' must have at most %d column"
msgid_plural "'L' must have at most %d columns"
msgstr[0] "'L' doit avoir au moins %d colonne"
msgstr[1] "'L' doit avoir au moins %d colonnes"

#. R/gls.R: ngettext(sum(noMatch), "effect %s not matched", "effects %s not matched",     domain = "R-nlme")
#. R/lme.R: ngettext(sum(noMatch), "effect %s not matched", "effects %s not matched",     domain = "R-nlme")
#: R/gls.R:0 R/lme.R:0
msgid "effect %s not matched"
msgid_plural "effects %s not matched"
msgstr[0] "effet %s incohérent"
msgstr[1] "effets %s incohérent"

#. R/nlme.R: ngettext(sum(noMatch), "group name not matched in starting values for random effects: %s",     "group names not matched in starting values for random effects: %s",     domain = "R-nlme")
#: R/nlme.R:0
msgid "group name not matched in starting values for random effects: %s"
msgid_plural "group names not matched in starting values for random effects: %s"
msgstr[0] "le nom de groupe ne correspond pas aux valeurs de départ pour les effets aléatoires : %s"
msgstr[1] "les noms des groupes ne correspondent pas aux valeurs de départ pour les effets aléatoires : %s"

#. R/lme.R: ngettext(sum(aux), "nonexistent level %s", "nonexistent levels %s")
#. R/lme.R: ngettext(sum(aux), "nonexistent level %s", "nonexistent levels %s")
#: R/lme.R:0
msgid "nonexistent level %s"
msgid_plural "nonexistent levels %s"
msgstr[0] "niveau inexistant %s"
msgstr[1] "niveaux inexistants %s"

#. R/gnls.R: ngettext(length(start), "supplied %d starting value, need %d",     "supplied %d starting values, need %d")
#: R/gnls.R:0
msgid "supplied %d starting value, need %d"
msgid_plural "supplied %d starting values, need %d"
msgstr[0] ""
msgstr[1] ""

#. R/gls.R: ngettext(sum(noMatch), "term %s not matched", "terms %s not matched",     domain = "R-nlme")
#. R/lme.R: ngettext(sum(noMatch), "term %s not matched", "terms %s not matched",     domain = "R-nlme")
#: R/gls.R:0 R/lme.R:0
msgid "term %s not matched"
msgid_plural "terms %s not matched"
msgstr[0] "le terme %s est incohérent"
msgstr[1] "les termes %s sont incohérents"

#~ msgid "approximate covariance matrix for parameter estimates not of full rank"
#~ msgstr "matrice de covariance approximative pour les estimateurs de paramètres qui ne sont pas de rang complet"
